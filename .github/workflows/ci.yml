name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  lint-and-format:
    name: Code Quality Checks
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
        cache: 'pip'

    - name: Install dependencies
      run: |
        pip install --upgrade pip
        pip install black ruff mypy

    - name: Run Black
      run: black --check src/ tests/ run_pipeline.py --line-length 100

    - name: Run Ruff
      run: ruff check src/ tests/ run_pipeline.py

    - name: Run mypy
      run: mypy src/ --ignore-missing-imports --check-untyped-defs
      continue-on-error: true  # Don't fail build on type errors initially

  test:
    name: Run Tests
    runs-on: ${{ matrix.os }}
    permissions:
      contents: read
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.10', '3.11', '3.12', '3.13']

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'

    - name: Install dependencies
      run: |
        pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt

    - name: Run unit tests
      run: |
        pytest tests/unit/ -v --maxfail=5
      continue-on-error: true  # Don't fail until tests are implemented

    - name: Run integration tests
      run: |
        pytest tests/integration/ -v --maxfail=5
      continue-on-error: true  # Don't fail until tests are implemented
      # Note: Integration tests may need API keys (not run in CI by default)

  coverage:
    name: Test Coverage
    runs-on: ubuntu-latest
    permissions:
      contents: read
    if: github.event_name == 'pull_request'

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
        cache: 'pip'

    - name: Install dependencies
      run: |
        pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt

    - name: Run tests with coverage
      run: |
        pytest tests/ --cov=src --cov-report=xml --cov-report=term
      continue-on-error: true

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        fail_ci_if_error: false
      continue-on-error: true

  validate-schemas:
    name: Validate JSON Schemas
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
        cache: 'pip'

    - name: Install dependencies
      run: |
        pip install jsonschema

    - name: Validate schemas
      run: |
        python validate_schemas.py
      continue-on-error: true  # Make optional initially

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
        cache: 'pip'

    - name: Install dependencies
      run: |
        pip install --upgrade pip
        pip install pip-audit safety

    - name: Run pip-audit
      run: |
        pip-audit
      continue-on-error: true

    - name: Check for secrets
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base: ${{ github.event.repository.default_branch }}
        head: HEAD
      continue-on-error: true
