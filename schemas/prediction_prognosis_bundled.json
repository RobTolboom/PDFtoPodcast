{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "prediction_prognosis.schema.json",
  "title": "Prediction / Prognosis Model Study Extraction",
  "type": "object",
  "additionalProperties": false,
  "required": [
    "schema_version",
    "metadata",
    "study_design",
    "population",
    "predictors",
    "outcomes",
    "datasets",
    "models",
    "performance"
  ],
  "properties": {
    "schema_version": {
      "type": "string",
      "pattern": "^v\\d+\\.\\d+(\\.\\d+)?$",
      "description": "Semantic-like version tag, e.g. v1.0 of v1.2.3"
    },
    "document": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "filename",
        "page_count"
      ],
      "properties": {
        "filename": {
          "type": "string"
        },
        "content_type": {
          "type": "string",
          "enum": [
            "application/pdf"
          ],
          "default": "application/pdf"
        },
        "size_bytes": {
          "type": "integer",
          "minimum": 0
        },
        "page_count": {
          "type": "integer",
          "minimum": 1
        }
      }
    },
    "study_id": {
      "type": "string",
      "pattern": "^[A-Za-z0-9._-]+$",
      "description": "Internal opaque ID for this article"
    },
    "generator": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "name",
        "model",
        "timestamp"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "model": {
          "type": "string"
        },
        "temperature": {
          "type": "number"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "language": {
      "$ref": "#/$defs/LanguageCode"
    },
    "metadata": {
      "$ref": "#/$defs/Metadata"
    },
    "study_design": {
      "$ref": "#/$defs/StudyDesign"
    },
    "population": {
      "$ref": "#/$defs/Population"
    },
    "predictors": {
      "type": "array",
      "items": {
        "$ref": "#/$defs/Predictor"
      },
      "minItems": 1
    },
    "outcomes": {
      "type": "array",
      "items": {
        "$ref": "#/$defs/Outcome"
      },
      "minItems": 1
    },
    "datasets": {
      "type": "array",
      "items": {
        "$ref": "#/$defs/Dataset"
      },
      "minItems": 1
    },
    "models": {
      "type": "array",
      "items": {
        "$ref": "#/$defs/ModelSpec"
      },
      "minItems": 1
    },
    "performance": {
      "type": "array",
      "items": {
        "$ref": "#/$defs/PerformanceResult"
      },
      "default": []
    },
    "decision_curves": {
      "type": "array",
      "items": {
        "$ref": "#/$defs/DecisionCurve"
      },
      "default": []
    },
    "tables_parsed": {
      "type": "array",
      "items": {
        "$ref": "#/$defs/ParsedTable"
      },
      "default": []
    },
    "figures_summary": {
      "type": "array",
      "items": {
        "$ref": "#/$defs/FigureSummary"
      },
      "default": []
    },
    "risk_of_bias": {
      "$ref": "#/$defs/RiskOfBias"
    },
    "probast": {
      "type": "object",
      "description": "PROBAST (Prediction model Risk Of Bias ASsessment Tool) assessment",
      "properties": {
        "overall_risk": {
          "type": "string",
          "enum": [
            "low",
            "high",
            "unclear"
          ]
        },
        "overall_applicability": {
          "type": "string",
          "enum": [
            "low",
            "high",
            "unclear"
          ]
        },
        "domains": {
          "type": "object",
          "properties": {
            "participants": {
              "type": "object",
              "properties": {
                "risk_of_bias": {
                  "type": "string",
                  "enum": [
                    "low",
                    "high",
                    "unclear"
                  ]
                },
                "applicability": {
                  "type": "string",
                  "enum": [
                    "low",
                    "high",
                    "unclear"
                  ]
                },
                "concerns": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "predictors": {
              "type": "object",
              "properties": {
                "risk_of_bias": {
                  "type": "string",
                  "enum": [
                    "low",
                    "high",
                    "unclear"
                  ]
                },
                "applicability": {
                  "type": "string",
                  "enum": [
                    "low",
                    "high",
                    "unclear"
                  ]
                },
                "concerns": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "outcome": {
              "type": "object",
              "properties": {
                "risk_of_bias": {
                  "type": "string",
                  "enum": [
                    "low",
                    "high",
                    "unclear"
                  ]
                },
                "applicability": {
                  "type": "string",
                  "enum": [
                    "low",
                    "high",
                    "unclear"
                  ]
                },
                "concerns": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "analysis": {
              "type": "object",
              "properties": {
                "risk_of_bias": {
                  "type": "string",
                  "enum": [
                    "low",
                    "high",
                    "unclear"
                  ]
                },
                "concerns": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "notes": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "sample_size_considerations": {
      "type": "object",
      "description": "Sample size, EPV, and overfitting assessment",
      "properties": {
        "events_per_variable": {
          "type": "object",
          "properties": {
            "epv": {
              "type": "number",
              "description": "Events per candidate predictor variable"
            },
            "n_events": {
              "type": "integer",
              "minimum": 0
            },
            "n_candidate_predictors": {
              "type": "integer",
              "minimum": 1
            },
            "adequate": {
              "type": "boolean",
              "description": "Whether EPV meets recommended threshold (e.g., â‰¥10-20)"
            }
          },
          "additionalProperties": false
        },
        "sample_size_justification": {
          "type": "string"
        },
        "a_priori_calculation": {
          "type": "boolean"
        },
        "overfitting_risk": {
          "type": "string",
          "enum": [
            "low",
            "moderate",
            "high",
            "unclear"
          ]
        },
        "shrinkage_factor": {
          "type": "number",
          "minimum": 0,
          "maximum": 1,
          "description": "Uniform shrinkage factor if reported"
        },
        "optimism": {
          "type": "number",
          "description": "Estimated optimism in performance from bootstrap/CV"
        }
      },
      "additionalProperties": false
    },
    "protocol_deviations": {
      "type": "string"
    },
    "tripod_reporting": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "version": {
          "type": "string",
          "enum": [
            "TRIPOD 2015",
            "TRIPOD-AI 2024",
            "TRIPOD-Cluster",
            "CLAIM",
            "MI-CLAIM",
            "STARD-AI",
            "other"
          ],
          "default": "TRIPOD 2015"
        },
        "claimed": {
          "type": "boolean",
          "default": false
        },
        "checklist_available": {
          "type": "boolean",
          "default": false
        },
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "item_id",
              "reported"
            ],
            "properties": {
              "item_id": {
                "type": "string"
              },
              "reported": {
                "type": "string",
                "enum": [
                  "yes",
                  "partially",
                  "no",
                  "unclear"
                ]
              },
              "location": {
                "type": "string"
              },
              "source": {
                "$ref": "#/$defs/SourceRef"
              },
              "notes": {
                "type": "string"
              }
            }
          },
          "default": []
        }
      }
    },
    "fairness_assessment": {
      "type": "array",
      "description": "Fairness, equity, and subgroup performance assessment",
      "items": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "model_id",
          "dataset_id",
          "subgroup_var",
          "level"
        ],
        "properties": {
          "model_id": {
            "type": "string"
          },
          "dataset_id": {
            "type": "string"
          },
          "subgroup_var": {
            "type": "string",
            "description": "e.g., age, sex, race/ethnicity, socioeconomic status"
          },
          "level": {
            "type": "string"
          },
          "n": {
            "type": "integer",
            "minimum": 0
          },
          "events": {
            "type": "integer",
            "minimum": 0
          },
          "auc_roc": {},
          "calibration_slope": {},
          "calibration_intercept": {},
          "o_e_ratio": {},
          "algorithmic_fairness": {
            "type": "object",
            "description": "Algorithmic fairness metrics",
            "properties": {
              "demographic_parity": {
                "type": "number",
                "description": "Difference in positive prediction rates"
              },
              "equal_opportunity": {
                "type": "number",
                "description": "Difference in TPR"
              },
              "equalized_odds": {
                "type": "number",
                "description": "Max difference in TPR or FPR"
              },
              "predictive_parity": {
                "type": "number",
                "description": "Difference in PPV"
              },
              "fairness_satisfied": {
                "type": "boolean"
              },
              "fairness_threshold": {
                "type": "number"
              }
            },
            "additionalProperties": false
          },
          "performance_disparity": {
            "type": "object",
            "properties": {
              "disparity_ratio": {
                "type": "number",
                "description": "Performance ratio vs reference group"
              },
              "reference_group": {
                "type": "string"
              },
              "clinically_meaningful": {
                "type": "boolean"
              }
            },
            "additionalProperties": false
          },
          "bias_mitigation": {
            "type": "object",
            "properties": {
              "applied": {
                "type": "boolean"
              },
              "method": {
                "type": "string",
                "enum": [
                  "pre_processing",
                  "in_processing",
                  "post_processing",
                  "none"
                ]
              },
              "technique": {
                "type": "string"
              },
              "effectiveness": {
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "source": {
            "$ref": "#/$defs/SourceRef"
          },
          "notes": {
            "type": "string"
          }
        }
      },
      "default": []
    },
    "data_leakage_assessment": {
      "type": "object",
      "description": "Assessment of potential data leakage",
      "properties": {
        "assessed": {
          "type": "boolean"
        },
        "temporal_leakage": {
          "type": "object",
          "properties": {
            "detected": {
              "type": "boolean"
            },
            "description": {
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "feature_leakage": {
          "type": "object",
          "properties": {
            "detected": {
              "type": "boolean"
            },
            "leaking_features": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "additionalProperties": false
        },
        "label_leakage": {
          "type": "object",
          "properties": {
            "detected": {
              "type": "boolean"
            },
            "description": {
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "train_test_contamination": {
          "type": "object",
          "properties": {
            "detected": {
              "type": "boolean"
            },
            "description": {
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "model_deployment": {
      "type": "object",
      "description": "Model deployment and maintenance information",
      "properties": {
        "deployed": {
          "type": "boolean"
        },
        "deployment_date": {
          "type": "string",
          "format": "date"
        },
        "deployment_setting": {
          "type": "string"
        },
        "model_format": {
          "type": "string",
          "enum": [
            "PMML",
            "ONNX",
            "pickle",
            "joblib",
            "savedmodel",
            "API",
            "other"
          ]
        },
        "software_requirements": {
          "type": "string"
        },
        "computational_requirements": {
          "type": "object",
          "properties": {
            "inference_time_ms": {
              "type": "number"
            },
            "memory_mb": {
              "type": "number"
            },
            "gpu_required": {
              "type": "boolean"
            }
          },
          "additionalProperties": false
        },
        "integration": {
          "type": "object",
          "properties": {
            "ehr_integrated": {
              "type": "boolean"
            },
            "ehr_system": {
              "type": "string"
            },
            "api_available": {
              "type": "boolean"
            },
            "api_url": {
              "type": "string",
              "format": "uri"
            }
          },
          "additionalProperties": false
        },
        "monitoring_plan": {
          "type": "object",
          "properties": {
            "performance_monitoring": {
              "type": "boolean"
            },
            "monitoring_frequency": {
              "type": "string"
            },
            "performance_threshold": {
              "type": "string"
            },
            "update_triggers": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "ab_testing": {
              "type": "boolean"
            }
          },
          "additionalProperties": false
        },
        "version_control": {
          "type": "object",
          "properties": {
            "current_version": {
              "type": "string"
            },
            "version_history": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "version": {
                    "type": "string"
                  },
                  "date": {
                    "type": "string",
                    "format": "date"
                  },
                  "changes": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "extraction_warnings": {
      "type": "array",
      "items": {
        "$ref": "#/$defs/ExtractionWarning"
      },
      "default": []
    },
    "truncated": {
      "$ref": "#/$defs/TruncationInfo"
    }
  },
  "$defs": {
    "StudyDesign": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "label"
      ],
      "properties": {
        "label": {
          "type": "string",
          "enum": [
            "Prediction/Prognosis"
          ]
        },
        "purpose": {
          "type": "array",
          "description": "Aligned with TRIPOD",
          "items": {
            "type": "string",
            "enum": [
              "development",
              "internal_validation",
              "temporal_validation",
              "external_validation",
              "update",
              "impact",
              "comparison"
            ]
          },
          "default": []
        },
        "design_type": {
          "type": "string",
          "enum": [
            "prospective",
            "retrospective",
            "mixed",
            "unclear"
          ]
        },
        "centres": {
          "type": "integer",
          "minimum": 1
        },
        "countries": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/CountryCode"
          },
          "default": []
        },
        "setting": {
          "type": "string"
        },
        "time_window_iso8601": {
          "$ref": "#/$defs/ISO8601Duration"
        },
        "source": {
          "$ref": "#/$defs/SourceRef"
        },
        "design_notes": {
          "type": "string"
        }
      }
    },
    "Population": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "n_total": {
          "type": "integer",
          "minimum": 0
        },
        "events": {
          "type": "integer",
          "minimum": 0,
          "description": "Number of outcome events in derivation cohort (if applicable)"
        },
        "age_mean": {},
        "age_sd": {},
        "sex_female_pct": {},
        "inclusion_criteria": {
          "type": "string"
        },
        "exclusion_criteria": {
          "type": "string"
        },
        "follow_up_duration_iso8601": {
          "$ref": "#/$defs/ISO8601Duration"
        },
        "outcome_incidence_pct": {},
        "missing_data_overview": {
          "type": "string"
        },
        "source": {
          "$ref": "#/$defs/SourceRef"
        }
      }
    },
    "Predictor": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "predictor_id",
        "name",
        "type"
      ],
      "properties": {
        "predictor_id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "definition": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "numeric",
            "categorical",
            "binary",
            "ordinal",
            "text",
            "image",
            "composite",
            "other"
          ]
        },
        "unit": {
          "type": "string"
        },
        "measurement_time": {
          "type": "string",
          "enum": [
            "baseline",
            "followup",
            "unknown"
          ],
          "default": "baseline"
        },
        "coding": {
          "type": "string",
          "description": "e.g., one-hot, ordinal scores, splines, standardization"
        },
        "transformations": {
          "type": "string",
          "description": "e.g., log, Box-Cox, restricted cubic spline"
        },
        "missing_fraction_pct": {},
        "imputation": {
          "type": "string",
          "description": "e.g., MICE, mean, indicator method"
        },
        "source": {
          "$ref": "#/$defs/SourceRef"
        }
      }
    },
    "Outcome": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "outcome_id",
        "name",
        "type"
      ],
      "properties": {
        "outcome_id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "definition": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "binary",
            "time_to_event",
            "continuous",
            "ordinal"
          ]
        },
        "time_horizon": {
          "type": "string",
          "description": "e.g., 30-day mortality, 1-year risk"
        },
        "time_horizon_iso8601": {
          "$ref": "#/$defs/ISO8601Duration"
        },
        "measurement_method": {
          "type": "string"
        },
        "source": {
          "$ref": "#/$defs/SourceRef"
        }
      }
    },
    "Dataset": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "dataset_id",
        "role"
      ],
      "properties": {
        "dataset_id": {
          "type": "string"
        },
        "role": {
          "type": "string",
          "enum": [
            "derivation",
            "internal_validation",
            "temporal_validation",
            "external_validation",
            "test",
            "update"
          ]
        },
        "label": {
          "type": "string"
        },
        "centres": {
          "type": "integer",
          "minimum": 0
        },
        "countries": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/CountryCode"
          },
          "default": []
        },
        "start_date": {
          "type": "string",
          "format": "date"
        },
        "end_date": {
          "type": "string",
          "format": "date"
        },
        "n": {
          "type": "integer",
          "minimum": 0
        },
        "events": {
          "type": "integer",
          "minimum": 0
        },
        "case_mix_notes": {
          "type": "string"
        },
        "source": {
          "$ref": "#/$defs/SourceRef"
        }
      }
    },
    "ModelSpec": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "model_id",
        "label",
        "algorithm",
        "outcome_id",
        "training_dataset_id"
      ],
      "properties": {
        "model_id": {
          "type": "string"
        },
        "label": {
          "type": "string"
        },
        "outcome_id": {
          "type": "string"
        },
        "training_dataset_id": {
          "type": "string"
        },
        "algorithm": {
          "type": "string",
          "enum": [
            "logistic",
            "cox",
            "fine_gray",
            "linear",
            "lasso",
            "ridge",
            "elastic_net",
            "gbm",
            "xgboost",
            "random_forest",
            "svm",
            "knn",
            "neural_network",
            "bayesian",
            "other"
          ]
        },
        "link_function": {
          "type": "string",
          "description": "e.g., logit, cloglog, identity"
        },
        "regularization": {
          "type": "string",
          "enum": [
            "none",
            "lasso",
            "ridge",
            "elastic_net",
            "other"
          ],
          "default": "none"
        },
        "feature_selection": {
          "type": "string",
          "description": "e.g., AIC/BIC, stepwise, clinical pre-specification"
        },
        "predictors_used": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": []
        },
        "coefficients": {
          "type": "array",
          "description": "For regression-type models; beta coefficients per predictor",
          "items": {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "predictor",
              "beta"
            ],
            "properties": {
              "predictor": {
                "type": "string"
              },
              "beta": {},
              "se": {}
            }
          },
          "default": []
        },
        "intercept": {
          "description": "Regression intercept; for Cox, log-baseline hazard not used"
        },
        "baseline_hazard": {
          "type": "string",
          "description": "If Cox/Fine-Gray: description or function of baseline hazard/cumulative baseline hazard"
        },
        "variable_importance": {
          "type": "array",
          "description": "For ML models; scale and definition per paper",
          "items": {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "predictor",
              "importance"
            ],
            "properties": {
              "predictor": {
                "type": "string"
              },
              "importance": {}
            }
          },
          "default": []
        },
        "explainability": {
          "type": "object",
          "description": "Model explainability and interpretability methods",
          "properties": {
            "shap_values": {
              "type": "object",
              "properties": {
                "computed": {
                  "type": "boolean"
                },
                "global_importance": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "predictor": {
                        "type": "string"
                      },
                      "mean_abs_shap": {
                        "type": "number"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "summary_plot_source": {
                  "$ref": "#/$defs/SourceRef"
                }
              },
              "additionalProperties": false
            },
            "lime": {
              "type": "object",
              "properties": {
                "used": {
                  "type": "boolean"
                },
                "n_explanations": {
                  "type": "integer"
                },
                "explanation_source": {
                  "$ref": "#/$defs/SourceRef"
                }
              },
              "additionalProperties": false
            },
            "partial_dependence": {
              "type": "object",
              "properties": {
                "plots_provided": {
                  "type": "boolean"
                },
                "predictors_analyzed": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "plot_source": {
                  "$ref": "#/$defs/SourceRef"
                }
              },
              "additionalProperties": false
            },
            "ice_plots": {
              "type": "object",
              "properties": {
                "provided": {
                  "type": "boolean"
                },
                "plot_source": {
                  "$ref": "#/$defs/SourceRef"
                }
              },
              "additionalProperties": false
            },
            "feature_interactions": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "predictors": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "interaction_strength": {
                    "type": "number"
                  },
                  "h_statistic": {
                    "type": "number"
                  }
                },
                "additionalProperties": false
              }
            },
            "attention_weights": {
              "type": "object",
              "description": "For attention-based models (transformers, etc.)",
              "properties": {
                "visualized": {
                  "type": "boolean"
                },
                "visualization_source": {
                  "$ref": "#/$defs/SourceRef"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "hyperparameters": {
          "type": "array",
          "description": "Key hyperparameters as name/value pairs for portability",
          "items": {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "name",
              "value"
            ],
            "properties": {
              "name": {
                "type": "string"
              },
              "value": {
                "type": "string"
              }
            }
          },
          "default": []
        },
        "internal_validation_method": {
          "type": "string",
          "enum": [
            "none",
            "split_sample",
            "kfold_cv",
            "bootstrap",
            "repeated_cv",
            "other"
          ],
          "default": "none"
        },
        "missing_data_strategy": {
          "type": "string",
          "description": "Training-time handling of missing values"
        },
        "calibration_method": {
          "type": "string",
          "description": "e.g., Platt scaling, isotonic, recalibration slope"
        },
        "presentation": {
          "type": "string",
          "description": "e.g., nomogram, score chart, web/mobile calculator"
        },
        "web_calculator_url": {
          "type": "string",
          "format": "uri"
        },
        "source": {
          "$ref": "#/$defs/SourceRef"
        },
        "notes": {
          "type": "string"
        }
      }
    },
    "PerformanceResult": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "model_id",
        "dataset_id",
        "outcome_id"
      ],
      "properties": {
        "model_id": {
          "type": "string"
        },
        "dataset_id": {
          "type": "string"
        },
        "outcome_id": {
          "type": "string"
        },
        "time_horizon_iso8601": {
          "$ref": "#/$defs/ISO8601Duration"
        },
        "discrimination": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "auc_roc": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "point": {},
                "ci": {
                  "$ref": "#/$defs/EffectCI"
                }
              }
            },
            "c_statistic": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "point": {},
                "ci": {
                  "$ref": "#/$defs/EffectCI"
                }
              },
              "description": "Harrell's C voor time-to-event, indien gerapporteerd"
            },
            "pr_auc": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "point": {},
                "ci": {
                  "$ref": "#/$defs/EffectCI"
                }
              }
            }
          }
        },
        "calibration": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "calibration_in_the_large": {
              "description": "Difference between mean predicted and observed risk"
            },
            "intercept": {},
            "slope": {},
            "calibration_level": {
              "type": "string",
              "enum": [
                "weak",
                "moderate",
                "strong"
              ],
              "description": "Weak=intercept, moderate=slope+intercept, strong=flexible"
            },
            "o_e_ratio": {
              "description": "Observed/Expected"
            },
            "brier": {},
            "scaled_brier": {},
            "hl_test_p": {},
            "ici": {
              "description": "Integrated Calibration Index"
            },
            "spiegelhalter_z": {},
            "spiegelhalter_p": {},
            "calibration_plot_source": {
              "$ref": "#/$defs/SourceRef"
            }
          }
        },
        "clinical_utility": {
          "type": "object",
          "description": "Clinical utility and reclassification metrics",
          "properties": {
            "nri": {
              "type": "object",
              "description": "Net Reclassification Improvement",
              "properties": {
                "categorical": {
                  "type": "object",
                  "properties": {
                    "nri": {
                      "type": "number"
                    },
                    "nri_events": {
                      "type": "number"
                    },
                    "nri_non_events": {
                      "type": "number"
                    },
                    "categories": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "additionalProperties": false
                },
                "continuous": {
                  "type": "object",
                  "properties": {
                    "nri": {
                      "type": "number"
                    },
                    "p_value": {
                      "type": "number"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "idi": {
              "type": "object",
              "description": "Integrated Discrimination Improvement",
              "properties": {
                "idi": {
                  "type": "number"
                },
                "p_value": {
                  "type": "number"
                },
                "is_events": {
                  "type": "number",
                  "description": "Integrated sensitivity for events"
                },
                "is_non_events": {
                  "type": "number",
                  "description": "Integrated specificity for non-events"
                }
              },
              "additionalProperties": false
            },
            "relative_utility": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "threshold": {
                    "type": "number"
                  },
                  "relative_utility": {
                    "type": "number"
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "additionalProperties": false
        },
        "model_comparison": {
          "type": "object",
          "description": "Comparison with other models",
          "properties": {
            "comparator_models": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "delong_test": {
              "type": "object",
              "properties": {
                "performed": {
                  "type": "boolean"
                },
                "comparisons": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "model_a": {
                        "type": "string"
                      },
                      "model_b": {
                        "type": "string"
                      },
                      "auc_difference": {
                        "type": "number"
                      },
                      "p_value": {
                        "type": "number"
                      }
                    },
                    "additionalProperties": false
                  }
                }
              },
              "additionalProperties": false
            },
            "likelihood_ratio_test": {
              "type": "object",
              "properties": {
                "performed": {
                  "type": "boolean"
                },
                "chi_square": {
                  "type": "number"
                },
                "df": {
                  "type": "integer"
                },
                "p_value": {
                  "type": "number"
                }
              },
              "additionalProperties": false
            },
            "aic_bic": {
              "type": "object",
              "properties": {
                "aic": {
                  "type": "number"
                },
                "bic": {
                  "type": "number"
                },
                "best_model": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "threshold_metrics": {
          "type": "array",
          "description": "Metrics bij specifieke beslisdrempels",
          "items": {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "threshold"
            ],
            "properties": {
              "threshold": {},
              "sensitivity": {},
              "specificity": {},
              "ppv": {},
              "npv": {},
              "accuracy": {},
              "f1": {},
              "youden_j": {}
            }
          },
          "default": []
        },
        "recalibration": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "intercept_adjustment": {},
            "slope_adjustment": {},
            "method": {
              "type": "string"
            },
            "notes": {
              "type": "string"
            }
          }
        },
        "source": {
          "$ref": "#/$defs/SourceRef"
        },
        "notes": {
          "type": "string"
        }
      }
    },
    "DecisionCurve": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "model_id",
        "dataset_id"
      ],
      "properties": {
        "model_id": {
          "type": "string"
        },
        "dataset_id": {
          "type": "string"
        },
        "points": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "threshold",
              "net_benefit"
            ],
            "properties": {
              "threshold": {},
              "net_benefit": {}
            }
          },
          "default": []
        },
        "figure_source": {
          "$ref": "#/$defs/SourceRef"
        }
      }
    },
    "ParsedTable": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "table_id",
        "title"
      ],
      "properties": {
        "table_id": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "page": {
          "type": "integer",
          "minimum": 1
        },
        "type": {
          "type": "string",
          "enum": [
            "baseline",
            "outcomes",
            "harms",
            "methods",
            "other"
          ]
        },
        "rows": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "cells"
            ],
            "properties": {
              "cells": {
                "type": "array",
                "minItems": 1,
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "default": []
        },
        "source": {
          "$ref": "#/$defs/SourceRef"
        }
      }
    },
    "TruncationInfo": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "value": {
          "type": "boolean",
          "default": false
        },
        "reason": {
          "type": "string",
          "enum": [
            "token_limit",
            "page_limit",
            "timeout",
            "other"
          ]
        }
      }
    },
    "EffectCI": {
      "type": "object",
      "additionalProperties": false,
      "description": "Confidence interval for effect estimates",
      "required": [
        "lower",
        "upper"
      ],
      "properties": {
        "level": {
          "type": "number",
          "minimum": 50,
          "maximum": 99.99,
          "default": 95,
          "description": "Confidence level as percentage (e.g., 95, 97.5, 99)"
        },
        "lower": {
          "type": "number",
          "description": "Lower bound of confidence interval"
        },
        "upper": {
          "type": "number",
          "description": "Upper bound of confidence interval"
        }
      }
    },
    "RiskOfBias": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "tool": {
          "type": "string",
          "enum": [
            "RoB2",
            "ROBINS-I",
            "PROBAST",
            "Other"
          ]
        },
        "overall": {
          "type": "string"
        },
        "domains": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "domain",
              "judgement"
            ],
            "properties": {
              "domain": {
                "type": "string"
              },
              "judgement": {
                "type": "string",
                "enum": [
                  "low",
                  "some",
                  "high",
                  "unclear",
                  "moderate",
                  "serious",
                  "critical",
                  "no_information",
                  "some_concerns"
                ]
              },
              "notes": {
                "type": "string"
              }
            }
          },
          "default": []
        },
        "applicability": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "participants": {
              "type": "string",
              "enum": [
                "low",
                "high",
                "unclear"
              ]
            },
            "predictors": {
              "type": "string",
              "enum": [
                "low",
                "high",
                "unclear"
              ]
            },
            "outcome": {
              "type": "string",
              "enum": [
                "low",
                "high",
                "unclear"
              ]
            },
            "notes": {
              "type": "string"
            }
          }
        },
        "provenance": {
          "$ref": "#/$defs/Provenance"
        }
      },
      "allOf": [
        {
          "if": {
            "properties": {
              "tool": {
                "const": "RoB2"
              }
            }
          },
          "then": {
            "properties": {
              "overall": {
                "type": "string",
                "enum": [
                  "low",
                  "some_concerns",
                  "high",
                  "unclear"
                ]
              },
              "domains": {
                "items": {
                  "properties": {
                    "domain": {
                      "type": "string",
                      "enum": [
                        "randomization_process",
                        "Randomisation process",
                        "Randomization process",
                        "deviations_from_intended_interventions",
                        "Deviations from intended interventions",
                        "missing_outcome_data",
                        "Missing outcome data",
                        "measurement_of_outcome",
                        "Measurement of the outcome",
                        "Measurement of outcome",
                        "selection_of_reported_result",
                        "Selection of the reported result",
                        "Selection of reported result"
                      ]
                    },
                    "judgement": {
                      "type": "string",
                      "enum": [
                        "low",
                        "some_concerns",
                        "high",
                        "unclear"
                      ]
                    }
                  }
                },
                "minItems": 5
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "tool": {
                "const": "ROBINS-I"
              }
            }
          },
          "then": {
            "properties": {
              "overall": {
                "type": "string",
                "enum": [
                  "low",
                  "moderate",
                  "serious",
                  "critical",
                  "no_information"
                ]
              },
              "domains": {
                "items": {
                  "properties": {
                    "domain": {
                      "type": "string",
                      "enum": [
                        "bias_due_to_confounding",
                        "bias_in_selection_of_participants",
                        "bias_in_classification_of_interventions",
                        "bias_due_to_deviations_from_intended_interventions",
                        "bias_due_to_missing_data",
                        "bias_in_measurement_of_outcomes",
                        "bias_in_selection_of_reported_result"
                      ]
                    },
                    "judgement": {
                      "type": "string",
                      "enum": [
                        "low",
                        "moderate",
                        "serious",
                        "critical",
                        "no_information"
                      ]
                    }
                  }
                },
                "minItems": 7
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "tool": {
                "const": "PROBAST"
              }
            }
          },
          "then": {
            "properties": {
              "overall": {
                "type": "string",
                "enum": [
                  "low",
                  "high",
                  "unclear"
                ]
              },
              "domains": {
                "items": {
                  "properties": {
                    "domain": {
                      "type": "string",
                      "enum": [
                        "participants",
                        "predictors",
                        "outcome",
                        "analysis"
                      ]
                    },
                    "judgement": {
                      "type": "string",
                      "enum": [
                        "low",
                        "high",
                        "unclear"
                      ]
                    }
                  }
                },
                "minItems": 4
              },
              "applicability": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "participants": {
                    "type": "string",
                    "enum": [
                      "low",
                      "high",
                      "unclear"
                    ]
                  },
                  "predictors": {
                    "type": "string",
                    "enum": [
                      "low",
                      "high",
                      "unclear"
                    ]
                  },
                  "outcome": {
                    "type": "string",
                    "enum": [
                      "low",
                      "high",
                      "unclear"
                    ]
                  },
                  "notes": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      ]
    },
    "CountryCode": {
      "$ref": "#/$defs/CountryCodeAlpha2"
    },
    "Metadata": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "title",
        "journal"
      ],
      "properties": {
        "title": {
          "type": "string"
        },
        "journal": {
          "type": "string"
        },
        "journal_abbrev": {
          "type": "string"
        },
        "published_date": {
          "type": "string",
          "format": "date"
        },
        "published_date_precision": {
          "type": "string",
          "enum": [
            "year",
            "month",
            "day"
          ]
        },
        "volume": {
          "type": "string"
        },
        "issue": {
          "type": "string"
        },
        "pages": {
          "type": "string"
        },
        "page_start": {
          "type": "string"
        },
        "page_end": {
          "type": "string"
        },
        "article_number": {
          "type": "string"
        },
        "elocation_id": {
          "type": "string"
        },
        "issn": {
          "type": "string",
          "pattern": "^\\d{4}-\\d{3}[\\dxX]$",
          "description": "International Standard Serial Number (print version)"
        },
        "eissn": {
          "type": "string",
          "pattern": "^\\d{4}-\\d{3}[\\dxX]$",
          "description": "Electronic International Standard Serial Number"
        },
        "authors": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/Author"
          },
          "default": []
        },
        "pmid": {
          "type": "string",
          "pattern": "^\\d{1,8}$"
        },
        "pmcid": {
          "type": "string",
          "pattern": "^PMC\\d+$"
        },
        "doi": {
          "type": "string",
          "pattern": "^10\\.\\d{4,}(\\.\\d+)?/[-._;()/:A-Za-z0-9\\[\\]]+$",
          "description": "DOI with comprehensive character support including brackets and extended punctuation",
          "examples": [
            "10.1056/NEJMoa2001017",
            "10.1002/(SICI)1097-0142(19960101)77:1<1::AID-CNCR1>3.0.CO;2-Z"
          ]
        },
        "registration": {
          "$ref": "#/$defs/Registration"
        },
        "protocol_ref": {
          "type": "string"
        },
        "funding": {
          "type": "string"
        },
        "conflict_of_interest": {
          "type": "string"
        },
        "epub_ahead_of_print_date": {
          "type": "string"
        },
        "vancouver_citation": {
          "type": "string"
        },
        "vancouver_source": {
          "$ref": "#/$defs/SourceRef"
        },
        "source": {
          "$ref": "#/$defs/SourceRef"
        },
        "external_ids": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/ExternalId"
          },
          "default": []
        },
        "supplements": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/SupplementFile"
          },
          "default": []
        },
        "parsing_context": {
          "$ref": "#/$defs/ParsingContext"
        },
        "content_hash_sha256": {
          "type": "string",
          "pattern": "^[a-fA-F0-9]{64}$",
          "description": "SHA-256 hash van bronbestand of platte tekst (64-char hex)"
        }
      },
      "dependentSchemas": {
        "published_date_precision": {
          "required": [
            "published_date"
          ],
          "properties": {
            "published_date_precision": {
              "description": "Precision can only be specified if published_date is present"
            }
          }
        },
        "page_end": {
          "required": [
            "page_start"
          ],
          "properties": {
            "page_end": {
              "description": "End page requires start page to be specified"
            }
          }
        },
        "vancouver_source": {
          "required": [
            "vancouver_citation"
          ],
          "properties": {
            "vancouver_source": {
              "description": "Vancouver source reference requires vancouver_citation to be present"
            }
          }
        }
      },
      "allOf": [
        {
          "if": {
            "properties": {
              "published_date_precision": {
                "const": "day"
              }
            }
          },
          "then": {
            "properties": {
              "published_date": {
                "pattern": "^\\d{4}-\\d{2}-\\d{2}$",
                "description": "Day precision requires full date format YYYY-MM-DD"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "published_date_precision": {
                "const": "month"
              }
            }
          },
          "then": {
            "properties": {
              "published_date": {
                "pattern": "^\\d{4}-\\d{2}(-\\d{2})?$",
                "description": "Month precision allows YYYY-MM or YYYY-MM-DD format"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "published_date_precision": {
                "const": "year"
              }
            }
          },
          "then": {
            "properties": {
              "published_date": {
                "pattern": "^\\d{4}(-\\d{2}(-\\d{2})?)?$",
                "description": "Year precision allows YYYY, YYYY-MM, or YYYY-MM-DD format"
              }
            }
          }
        }
      ]
    },
    "SourceRef": {
      "type": "object",
      "additionalProperties": false,
      "description": "Reference to a specific location within a document",
      "properties": {
        "anchor": {
          "type": "string",
          "description": "Free-text pointer like 'Table 2', 'Fig 1', or sentence quote"
        },
        "page": {
          "type": "integer",
          "minimum": 1,
          "description": "Page number within the document"
        },
        "figure_id": {
          "type": "string",
          "description": "Identifier of a specific figure"
        },
        "table_id": {
          "type": "string",
          "description": "Identifier of a specific table"
        }
      }
    },
    "ISO8601Duration": {
      "$anchor": "duration",
      "type": "string",
      "pattern": "^P(?:(?:\\d+Y)?(?:\\d+M)?(?:\\d+W)?(?:\\d+D)?)?(?:T(?:\\d+H)?(?:\\d+M)?(?:\\d+(?:\\.\\d+)?S)?)?$",
      "description": "Strict ISO 8601 duration (e.g., 'P30D', 'PT24H', 'P2W', 'P1Y2M3DT4H5M6S').",
      "examples": [
        "P30D",
        "PT24H",
        "P2W",
        "P6M",
        "P1Y",
        "PT2H30M",
        "P1Y2M3DT4H5M6.789S"
      ]
    },
    "Registration": {
      "type": "object",
      "additionalProperties": false,
      "description": "Clinical trial or study registration information",
      "properties": {
        "registry": {
          "type": "string",
          "enum": [
            "ClinicalTrials.gov",
            "ISRCTN",
            "EudraCT",
            "EU-CTR",
            "CTIS",
            "ChiCTR",
            "ANZCTR",
            "UMIN-CTR",
            "JPRN",
            "PACTR",
            "IRCT",
            "DRKS",
            "TCTR",
            "SLCTR",
            "RPCEC",
            "REBEC",
            "Other"
          ],
          "description": "Clinical trial registry (includes major international and regional registries)"
        },
        "identifier": {
          "type": "string",
          "description": "Registration identifier within the registry",
          "examples": [
            "NCT04123456",
            "ISRCTN12345678",
            "2020-001234-56",
            "UMIN000012345"
          ]
        },
        "url": {
          "type": "string",
          "format": "uri",
          "description": "Direct URL to the registration record"
        }
      },
      "allOf": [
        {
          "if": {
            "properties": {
              "registry": {
                "const": "ClinicalTrials.gov"
              }
            }
          },
          "then": {
            "properties": {
              "identifier": {
                "pattern": "^NCT\\d{8}$",
                "description": "ClinicalTrials.gov identifier format: NCT followed by 8 digits"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "registry": {
                "const": "ISRCTN"
              }
            }
          },
          "then": {
            "properties": {
              "identifier": {
                "pattern": "^ISRCTN\\d{8}$",
                "description": "ISRCTN identifier format: ISRCTN followed by 8 digits"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "registry": {
                "const": "EudraCT"
              }
            }
          },
          "then": {
            "properties": {
              "identifier": {
                "pattern": "^\\d{4}-\\d{6}-\\d{2}$",
                "description": "EudraCT identifier format: YYYY-NNNNNN-NN"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "registry": {
                "const": "UMIN-CTR"
              }
            }
          },
          "then": {
            "properties": {
              "identifier": {
                "pattern": "^UMIN\\d{9}$",
                "description": "UMIN-CTR identifier format: UMIN followed by 9 digits"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "registry": {
                "const": "ChiCTR"
              }
            }
          },
          "then": {
            "properties": {
              "identifier": {
                "pattern": "^ChiCTR\\d{10}$",
                "description": "ChiCTR identifier format: ChiCTR followed by 10 digits"
              }
            }
          }
        }
      ]
    },
    "SupplementFile": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "label"
      ],
      "properties": {
        "label": {
          "type": "string"
        },
        "filename": {
          "type": "string"
        },
        "url": {
          "type": "string",
          "format": "uri"
        },
        "doi": {
          "type": "string",
          "pattern": "^10\\.\\d{4,9}/[-._;()/:A-Za-z0-9]+$"
        },
        "content_type": {
          "type": "string"
        },
        "file_size": {
          "type": "integer",
          "minimum": 0,
          "description": "File size in bytes"
        },
        "checksum": {
          "$ref": "#/$defs/DataIntegrity"
        }
      }
    },
    "Provenance": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "extractor": {
          "type": "string",
          "description": "Person or system that performed extraction"
        },
        "method": {
          "type": "string",
          "enum": [
            "human_double_entry",
            "human_single",
            "llm_assisted",
            "rule_based",
            "automated",
            "other"
          ],
          "description": "Extraction method used"
        },
        "confidence": {
          "type": "number",
          "minimum": 0,
          "maximum": 1,
          "description": "Extractor's confidence in the extraction"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "description": "When extraction was performed"
        },
        "transformation_notes": {
          "type": "string",
          "description": "Notes about data processing or transformation"
        },
        "consensus_status": {
          "type": "string",
          "enum": [
            "agreement",
            "disagreement",
            "resolved",
            "single_reviewer",
            "not_applicable"
          ],
          "description": "Status of reviewer consensus (for double extraction)"
        },
        "reviewers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of reviewers involved in extraction"
        },
        "adjudication": {
          "$ref": "#/$defs/Adjudication"
        },
        "source": {
          "$ref": "#/$defs/SourceRef"
        }
      }
    },
    "LanguageCode": {
      "type": "string",
      "pattern": "^[a-z]{2,3}(-[A-Z]{2})?(-[a-z]{2,8})*$",
      "description": "BCP 47 language tag supporting language, region, and variants (e.g., 'en-US', 'zh-Hans-CN', 'ar-EG')",
      "examples": [
        "en",
        "en-US",
        "en-GB",
        "nl",
        "nl-NL",
        "nl-BE",
        "de-DE",
        "fr-FR",
        "es-ES",
        "zh-Hans",
        "zh-Hant",
        "ar-EG",
        "he-IL"
      ]
    },
    "FigureSummary": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "figure_id",
        "caption"
      ],
      "properties": {
        "figure_id": {
          "type": "string"
        },
        "caption": {
          "type": "string"
        },
        "key_values": {
          "type": "object",
          "additionalProperties": {
            "type": "number"
          },
          "default": {}
        },
        "page": {
          "type": "integer",
          "minimum": 1
        },
        "source": {
          "$ref": "#/$defs/SourceRef"
        }
      }
    },
    "Author": {
      "type": "object",
      "additionalProperties": false,
      "description": "Author information for academic publications",
      "required": [
        "last_name"
      ],
      "properties": {
        "last_name": {
          "type": "string",
          "description": "Author's family name"
        },
        "initials": {
          "type": "string",
          "description": "Author's first/middle name initials"
        },
        "given_names": {
          "type": "string",
          "description": "Author's full first and middle names"
        },
        "orcid": {
          "type": "string",
          "pattern": "^(https://orcid\\.org/)?0000-00(0[2-9]|[1-9]\\d)-\\d{4}-\\d{3}[\\dX]$",
          "description": "ORCID identifier with checksum validation (optionally with URL prefix)",
          "examples": [
            "0000-0002-1825-0097",
            "https://orcid.org/0000-0002-1825-0097"
          ]
        },
        "affiliations": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [],
          "description": "Author's institutional affiliations"
        },
        "corresponding": {
          "type": "boolean",
          "default": false,
          "description": "Whether this author is the corresponding author"
        },
        "email": {
          "$ref": "#/$defs/EmailAddress",
          "description": "Contact email address (typically for corresponding authors)"
        }
      }
    },
    "CountryCodeAlpha2": {
      "type": "string",
      "pattern": "^[A-Z]{2}$",
      "description": "ISO 3166-1 alpha-2 country code (e.g., 'NL', 'US')."
    },
    "ParsingContext": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "parser_name",
        "parsing_timestamp"
      ],
      "properties": {
        "parser_name": {
          "type": "string",
          "description": "Name of the parsing tool/library used"
        },
        "parser_version": {
          "type": "string",
          "description": "Version of the parsing tool"
        },
        "parsing_timestamp": {
          "type": "string",
          "format": "date-time",
          "description": "When parsing was performed"
        },
        "language_detected": {
          "$ref": "#/$defs/LanguageCode",
          "description": "Detected language of the document"
        },
        "ocr_engine": {
          "type": "string",
          "description": "OCR engine used (if applicable)"
        },
        "ocr_quality_score": {
          "type": "number",
          "minimum": 0,
          "maximum": 1,
          "description": "Overall OCR quality assessment"
        },
        "pdf_producer": {
          "type": "string",
          "description": "Software that generated the PDF"
        },
        "page_count": {
          "type": "integer",
          "minimum": 1,
          "description": "Total pages in document"
        },
        "sections_detected": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [],
          "description": "Document sections automatically detected"
        },
        "parsing_warnings": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [],
          "description": "Warnings encountered during parsing"
        },
        "ai_processing": {
          "$ref": "#/$defs/AIProcessingMetadata"
        }
      }
    },
    "AIProcessingMetadata": {
      "type": "object",
      "additionalProperties": false,
      "description": "Metadata for AI/ML processing and bias detection",
      "properties": {
        "model_info": {
          "type": "object",
          "required": [
            "name",
            "version"
          ],
          "properties": {
            "name": {
              "type": "string",
              "description": "Model name or identifier"
            },
            "version": {
              "type": "string",
              "description": "Model version"
            },
            "architecture": {
              "type": "string",
              "enum": [
                "transformer",
                "cnn",
                "rnn",
                "lstm",
                "gru",
                "bert",
                "gpt",
                "ensemble",
                "classical_ml",
                "other"
              ],
              "description": "Model architecture type"
            },
            "training_data_size": {
              "type": "integer",
              "minimum": 0
            },
            "training_date": {
              "type": "string",
              "format": "date"
            },
            "fine_tuned": {
              "type": "boolean",
              "description": "Whether model was fine-tuned for specific domain"
            },
            "domain_specific": {
              "type": "boolean",
              "description": "Whether model is domain-specific (e.g., medical)"
            }
          }
        },
        "performance_metrics": {
          "type": "object",
          "properties": {
            "accuracy": {
              "type": "number",
              "minimum": 0,
              "maximum": 1
            },
            "precision": {
              "type": "number",
              "minimum": 0,
              "maximum": 1
            },
            "recall": {
              "type": "number",
              "minimum": 0,
              "maximum": 1
            },
            "f1_score": {
              "type": "number",
              "minimum": 0,
              "maximum": 1
            },
            "auc_roc": {
              "type": "number",
              "minimum": 0,
              "maximum": 1
            },
            "confidence_interval": {
              "$ref": "#/$defs/EffectCI"
            },
            "validation_method": {
              "type": "string",
              "enum": [
                "cross_validation",
                "holdout",
                "temporal_split",
                "external_validation",
                "other"
              ]
            },
            "test_set_size": {
              "type": "integer",
              "minimum": 0
            }
          }
        },
        "bias_assessment": {
          "type": "object",
          "description": "Assessment of potential biases in AI model",
          "properties": {
            "demographic_bias": {
              "type": "object",
              "properties": {
                "assessed": {
                  "type": "boolean"
                },
                "bias_detected": {
                  "type": "boolean"
                },
                "affected_groups": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Demographic groups showing bias"
                },
                "mitigation_applied": {
                  "type": "boolean"
                },
                "fairness_metrics": {
                  "type": "object",
                  "properties": {
                    "demographic_parity": {
                      "type": "number"
                    },
                    "equalized_odds": {
                      "type": "number"
                    },
                    "calibration": {
                      "type": "number"
                    }
                  }
                }
              }
            },
            "selection_bias": {
              "type": "object",
              "properties": {
                "training_data_representativeness": {
                  "type": "string",
                  "enum": [
                    "high",
                    "moderate",
                    "low",
                    "unknown"
                  ]
                },
                "sampling_method": {
                  "type": "string"
                },
                "geographic_bias": {
                  "type": "boolean"
                },
                "temporal_bias": {
                  "type": "boolean"
                }
              }
            },
            "confirmation_bias": {
              "type": "object",
              "properties": {
                "label_quality_assessment": {
                  "type": "boolean"
                },
                "inter_annotator_agreement": {
                  "type": "number",
                  "minimum": 0,
                  "maximum": 1
                },
                "annotation_guidelines": {
                  "type": "string"
                }
              }
            }
          }
        },
        "explainability": {
          "type": "object",
          "properties": {
            "method": {
              "type": "string",
              "enum": [
                "lime",
                "shap",
                "attention_weights",
                "gradient_attribution",
                "integrated_gradients",
                "permutation_importance",
                "other"
              ],
              "description": "Explainability method used"
            },
            "feature_importance": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "feature": {
                    "type": "string"
                  },
                  "importance_score": {
                    "type": "number"
                  },
                  "rank": {
                    "type": "integer",
                    "minimum": 1
                  }
                }
              }
            },
            "global_explanations": {
              "type": "boolean"
            },
            "local_explanations": {
              "type": "boolean"
            },
            "counterfactual_examples": {
              "type": "boolean"
            }
          }
        },
        "uncertainty_quantification": {
          "type": "object",
          "properties": {
            "method": {
              "type": "string",
              "enum": [
                "bayesian",
                "ensemble",
                "monte_carlo_dropout",
                "conformal_prediction",
                "none"
              ],
              "description": "Uncertainty quantification method"
            },
            "epistemic_uncertainty": {
              "type": "number",
              "description": "Model uncertainty"
            },
            "aleatoric_uncertainty": {
              "type": "number",
              "description": "Data uncertainty"
            },
            "prediction_intervals": {
              "type": "boolean"
            },
            "out_of_distribution_detection": {
              "type": "boolean"
            }
          }
        },
        "ethical_considerations": {
          "type": "object",
          "properties": {
            "informed_consent": {
              "type": "boolean",
              "description": "Whether data subjects provided informed consent for AI processing"
            },
            "data_minimization": {
              "type": "boolean",
              "description": "Whether data minimization principle was applied"
            },
            "right_to_explanation": {
              "type": "boolean",
              "description": "Whether explanations are provided to affected individuals"
            },
            "human_oversight": {
              "type": "string",
              "enum": [
                "human_in_the_loop",
                "human_on_the_loop",
                "human_out_of_the_loop"
              ],
              "description": "Level of human oversight in AI decisions"
            },
            "impact_assessment": {
              "type": "boolean",
              "description": "Whether algorithmic impact assessment was conducted"
            }
          }
        }
      }
    },
    "Adjudication": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "needed": {
          "type": "boolean",
          "default": false
        },
        "adjudicator": {
          "type": "string"
        },
        "notes": {
          "type": "string"
        }
      }
    },
    "ExternalId": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "source",
        "id"
      ],
      "properties": {
        "source": {
          "type": "string",
          "enum": [
            "PMID",
            "PMCID",
            "DOI",
            "NCT",
            "ISRCTN",
            "EudraCT",
            "EU-CTR",
            "CTIS",
            "UMIN",
            "JPRN",
            "DRKS",
            "ChiCTR",
            "ANZCTR",
            "arXiv",
            "bioRxiv",
            "medRxiv",
            "PubPeer",
            "ISBN",
            "ISSN",
            "Handle",
            "URN",
            "Other"
          ],
          "description": "External identifier source system including preprint servers and academic publishers"
        },
        "id": {
          "type": "string",
          "description": "Identifier value within the source system",
          "examples": [
            "1234.5678",
            "2023.01.001",
            "10.1101/2023.01.01.123456",
            "978-0-123456-78-9"
          ]
        },
        "url": {
          "type": "string",
          "format": "uri",
          "description": "Optional direct URL to the external resource"
        },
        "version": {
          "type": "string",
          "description": "Version number for preprints or versioned documents"
        }
      },
      "allOf": [
        {
          "if": {
            "properties": {
              "source": {
                "const": "arXiv"
              }
            }
          },
          "then": {
            "properties": {
              "id": {
                "pattern": "^(\\d{4}\\.\\d{4,5}|[a-z-]+/\\d{7})$",
                "description": "arXiv identifier (new: YYMM.NNNN or old: subject-class/YYMMnnn)"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "source": {
                "const": "ISBN"
              }
            }
          },
          "then": {
            "properties": {
              "id": {
                "pattern": "^(?:978|979)[0-9]{10}$|^[0-9]{9}[0-9X]$",
                "description": "ISBN-10 or ISBN-13 format"
              }
            }
          }
        }
      ]
    },
    "ExtractionWarning": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "TABLE_PARSE_FAIL",
            "AMBIGUOUS_UNIT",
            "CI_PARSE_FAIL",
            "MISSING_ARM_ID",
            "MISSING_GROUP_ID",
            "OTHER"
          ]
        },
        "message": {
          "type": "string"
        },
        "source": {
          "$ref": "#/$defs/SourceRef"
        }
      }
    },
    "DataIntegrity": {
      "type": "object",
      "additionalProperties": false,
      "description": "Data integrity verification with multiple hash algorithms",
      "required": [
        "algorithm",
        "value"
      ],
      "properties": {
        "algorithm": {
          "type": "string",
          "enum": [
            "SHA-256",
            "SHA-512",
            "SHA-3-256",
            "SHA-3-512",
            "BLAKE2b",
            "SHA-1",
            "MD5",
            "CRC32"
          ],
          "description": "Cryptographic hash algorithm used"
        },
        "value": {
          "type": "string",
          "description": "Hex-encoded hash value"
        },
        "salt": {
          "type": "string",
          "description": "Optional salt value for enhanced security"
        },
        "verification_timestamp": {
          "type": "string",
          "format": "date-time",
          "description": "When the hash was computed or verified"
        },
        "verified_by": {
          "type": "string",
          "description": "System or person who verified the hash"
        },
        "multiple_hashes": {
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "algorithm",
              "value"
            ],
            "properties": {
              "algorithm": {
                "type": "string"
              },
              "value": {
                "type": "string"
              }
            }
          },
          "description": "Additional hash values using different algorithms for enhanced verification"
        }
      },
      "allOf": [
        {
          "if": {
            "properties": {
              "algorithm": {
                "const": "SHA-256"
              }
            }
          },
          "then": {
            "properties": {
              "value": {
                "pattern": "^[a-fA-F0-9]{64}$",
                "description": "SHA-256 hash must be 64 hex characters"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "algorithm": {
                "const": "SHA-512"
              }
            }
          },
          "then": {
            "properties": {
              "value": {
                "pattern": "^[a-fA-F0-9]{128}$",
                "description": "SHA-512 hash must be 128 hex characters"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "algorithm": {
                "const": "SHA-3-256"
              }
            }
          },
          "then": {
            "properties": {
              "value": {
                "pattern": "^[a-fA-F0-9]{64}$",
                "description": "SHA-3-256 hash must be 64 hex characters"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "algorithm": {
                "const": "SHA-3-512"
              }
            }
          },
          "then": {
            "properties": {
              "value": {
                "pattern": "^[a-fA-F0-9]{128}$",
                "description": "SHA-3-512 hash must be 128 hex characters"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "algorithm": {
                "const": "BLAKE2b"
              }
            }
          },
          "then": {
            "properties": {
              "value": {
                "pattern": "^[a-fA-F0-9]{128}$",
                "description": "BLAKE2b hash must be 128 hex characters"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "algorithm": {
                "const": "SHA-1"
              }
            }
          },
          "then": {
            "properties": {
              "value": {
                "pattern": "^[a-fA-F0-9]{40}$",
                "description": "SHA-1 hash must be 40 hex characters"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "algorithm": {
                "const": "MD5"
              }
            }
          },
          "then": {
            "properties": {
              "value": {
                "pattern": "^[a-fA-F0-9]{32}$",
                "description": "MD5 hash must be 32 hex characters"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "algorithm": {
                "const": "CRC32"
              }
            }
          },
          "then": {
            "properties": {
              "value": {
                "pattern": "^[a-fA-F0-9]{8}$",
                "description": "CRC32 hash must be 8 hex characters"
              }
            }
          }
        }
      ]
    },
    "EmailAddress": {
      "type": "string",
      "format": "email",
      "pattern": "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$",
      "description": "Valid email address for correspondence",
      "examples": [
        "researcher@university.edu",
        "corresponding.author@hospital.org"
      ]
    }
  }
}
