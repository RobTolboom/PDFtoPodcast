{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "evidence_synthesis.schema.json",
  "title": "Evidence Synthesis Extraction (Systematic Review / Meta-analysis / NMA / IPD / Umbrella)",
  "type": "object",
  "additionalProperties": false,
  "required": [
    "schema_version",
    "metadata",
    "review_type",
    "eligibility",
    "search",
    "prisma_flow",
    "outcomes",
    "syntheses"
  ],
  "properties": {
    "schema_version": {
      "type": "string",
      "pattern": "^v\\d+\\.\\d+(\\.\\d+)?$",
      "description": "Semantic-like version tag, e.g. v1.0 of v1.2.3"
    },
    "document": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "filename",
        "page_count"
      ],
      "properties": {
        "filename": {
          "type": "string"
        },
        "content_type": {
          "type": "string",
          "enum": [
            "application/pdf"
          ],
          "default": "application/pdf"
        },
        "size_bytes": {
          "type": "integer",
          "minimum": 0
        },
        "page_count": {
          "type": "integer",
          "minimum": 1
        }
      }
    },
    "study_id": {
      "type": "string",
      "pattern": "^[A-Za-z0-9._-]+$",
      "description": "Internal opaque ID for this article (the review itself)"
    },
    "generator": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "name",
        "model",
        "timestamp"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "model": {
          "type": "string"
        },
        "temperature": {
          "type": "number"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "language": {
      "$ref": "#/$defs/LanguageCode"
    },
    "metadata": {
      "$ref": "#/$defs/Metadata"
    },
    "review_type": {
      "type": "string",
      "enum": [
        "Systematic review (no meta-analysis)",
        "Pairwise meta-analysis",
        "Network meta-analysis",
        "IPD meta-analysis",
        "Umbrella/Overview review",
        "Scoping review"
      ]
    },
    "protocol": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "prospero_id": {
          "type": "string"
        },
        "protocol_doi": {
          "type": "string",
          "pattern": "^10\\.\\d{4,9}/[-._;()/:A-Za-z0-9]+$"
        },
        "registration": {
          "$ref": "#/$defs/Registration"
        },
        "deviations_from_protocol": {
          "type": "string"
        },
        "source": {
          "$ref": "#/$defs/SourceRef"
        }
      }
    },
    "living_review": {
      "type": "object",
      "description": "Information for living systematic reviews that are continually updated",
      "additionalProperties": false,
      "properties": {
        "is_living_review": {
          "type": "boolean",
          "default": false
        },
        "version_number": {
          "type": "string",
          "description": "Version of this living review (e.g., v1.0, v2.1)"
        },
        "version_date": {
          "type": "string",
          "format": "date"
        },
        "update_schedule": {
          "type": "object",
          "properties": {
            "frequency": {
              "type": "string",
              "enum": [
                "monthly",
                "quarterly",
                "biannually",
                "annually",
                "event_triggered",
                "continuous"
              ]
            },
            "next_planned_update": {
              "type": "string",
              "format": "date"
            },
            "surveillance_method": {
              "type": "string",
              "description": "How new evidence is monitored (e.g., automated alerts, manual searches)"
            }
          },
          "additionalProperties": false
        },
        "trigger_criteria": {
          "type": "object",
          "description": "Criteria that trigger an update of the review",
          "properties": {
            "new_studies_threshold": {
              "type": "integer",
              "minimum": 1,
              "description": "Number of new studies needed to trigger update"
            },
            "change_in_conclusion": {
              "type": "boolean",
              "description": "Update if new evidence changes conclusion"
            },
            "substantial_new_evidence": {
              "type": "boolean"
            },
            "methodological_advances": {
              "type": "boolean"
            },
            "stakeholder_request": {
              "type": "boolean"
            }
          },
          "additionalProperties": false
        },
        "version_history": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "version": {
                "type": "string"
              },
              "date": {
                "type": "string",
                "format": "date"
              },
              "new_studies_added": {
                "type": "integer",
                "minimum": 0
              },
              "studies_excluded": {
                "type": "integer",
                "minimum": 0
              },
              "major_changes": {
                "type": "string"
              },
              "conclusion_changed": {
                "type": "boolean"
              },
              "doi": {
                "type": "string",
                "pattern": "^10\\.\\d{4,9}/[-._;()/:A-Za-z0-9]+$"
              }
            },
            "additionalProperties": false
          },
          "default": []
        },
        "changes_since_last_version": {
          "type": "object",
          "properties": {
            "new_studies": {
              "type": "integer",
              "minimum": 0
            },
            "removed_studies": {
              "type": "integer",
              "minimum": 0
            },
            "updated_analyses": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "narrative_summary": {
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "discontinuation": {
          "type": "object",
          "properties": {
            "discontinued": {
              "type": "boolean",
              "default": false
            },
            "discontinuation_date": {
              "type": "string",
              "format": "date"
            },
            "reason": {
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      }
    },
    "eligibility": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "population",
        "intervention_or_exposure",
        "comparators",
        "outcomes",
        "study_designs"
      ],
      "properties": {
        "population": {
          "type": "string"
        },
        "intervention_or_exposure": {
          "type": "string"
        },
        "comparators": {
          "type": "string"
        },
        "outcomes": {
          "type": "string"
        },
        "study_designs": {
          "type": "string",
          "description": "Eligible primary study designs (e.g., RCTs, cohorts)"
        },
        "setting": {
          "type": "string"
        },
        "language_restrictions": {
          "type": "string"
        },
        "timeframe": {
          "type": "string",
          "description": "Publication date limits, if any"
        },
        "exclusion_criteria": {
          "type": "string"
        },
        "source": {
          "$ref": "#/$defs/SourceRef"
        }
      }
    },
    "search": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "databases",
        "last_search_date"
      ],
      "properties": {
        "databases": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "minItems": 1
        },
        "other_sources": {
          "type": "array",
          "description": "Trial registries, grey literature, handsearching, reference lists",
          "items": {
            "type": "string"
          },
          "default": []
        },
        "search_strings": {
          "type": "array",
          "description": "Optional per-database search strategies",
          "items": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "database": {
                "type": "string"
              },
              "query": {
                "type": "string"
              }
            }
          },
          "default": []
        },
        "date_from": {
          "type": "string",
          "format": "date"
        },
        "date_to": {
          "type": "string",
          "format": "date"
        },
        "last_search_date": {
          "type": "string",
          "format": "date"
        },
        "deduplication_approach": {
          "type": "string"
        },
        "source": {
          "$ref": "#/$defs/SourceRef"
        }
      }
    },
    "prisma_flow": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "records_identified",
        "studies_included"
      ],
      "properties": {
        "records_identified": {
          "type": "integer",
          "minimum": 0
        },
        "records_after_duplicates": {
          "type": "integer",
          "minimum": 0
        },
        "records_screened": {
          "type": "integer",
          "minimum": 0
        },
        "records_excluded": {
          "type": "integer",
          "minimum": 0
        },
        "full_text_assessed": {
          "type": "integer",
          "minimum": 0
        },
        "full_text_excluded": {
          "type": "integer",
          "minimum": 0
        },
        "studies_included": {
          "type": "integer",
          "minimum": 0
        },
        "reasons_excluded": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": []
        },
        "prisma_figure": {
          "$ref": "#/$defs/SourceRef"
        }
      }
    },
    "data_collection": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "risk_of_bias_tool": {
          "type": "string",
          "enum": [
            "RoB2",
            "ROBINS-I",
            "Other",
            "Not reported"
          ]
        },
        "effect_size_computation": {
          "type": "string",
          "description": "Rules for effect measure selection & transformation"
        },
        "unit_of_analysis_issues": {
          "type": "string"
        },
        "multiplicity_strategy": {
          "type": "string",
          "description": "Handling multiple outcomes/timepoints/arms"
        },
        "source": {
          "$ref": "#/$defs/SourceRef"
        },
        "software": {
          "type": "string",
          "description": "Bijv. RevMan, R (metafor/netmeta), Stata, JASP"
        },
        "double_extraction": {
          "type": "boolean",
          "default": false
        },
        "adjudication_rate_pct": {
          "type": "number",
          "minimum": 0,
          "maximum": 100
        },
        "conversion_rules": {
          "type": "string",
          "description": "Bijv. median→mean/SD, HR uit KM, SMD↔MD"
        },
        "unit_harmonization": {
          "type": "string",
          "description": "Regels voor omrekenen units/schalen"
        }
      }
    },
    "included_studies": {
      "type": "array",
      "description": "Minimal per-study references used in the synthesis.",
      "items": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "study_label"
        ],
        "properties": {
          "study_label": {
            "type": "string",
            "description": "Short label or citation key (e.g., 'Smith 2020')"
          },
          "design": {
            "type": "string"
          },
          "n": {
            "type": "integer",
            "minimum": 0
          },
          "doi": {
            "type": "string",
            "pattern": "^10\\.\\d{4,9}/[-._;()/:A-Za-z0-9]+$"
          },
          "pmid": {
            "type": "string",
            "pattern": "^\\d{1,8}$"
          },
          "notes": {
            "type": "string"
          },
          "source": {
            "$ref": "#/$defs/SourceRef"
          }
        }
      },
      "default": []
    },
    "outcomes": {
      "type": "array",
      "items": {
        "$ref": "#/$defs/SynthesisOutcome"
      },
      "minItems": 1
    },
    "syntheses": {
      "type": "array",
      "items": {
        "$ref": "#/$defs/Synthesis"
      },
      "default": []
    },
    "risk_of_bias_summary": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "tool": {
          "type": "string",
          "enum": [
            "RoB2",
            "ROBINS-I",
            "Other"
          ]
        },
        "summary_text": {
          "type": "string"
        },
        "fig_source": {
          "$ref": "#/$defs/SourceRef"
        },
        "per_study_assessments": {
          "type": "array",
          "description": "Detailed risk of bias assessment per included study",
          "items": {
            "type": "object",
            "required": [
              "study_label",
              "rob_assessment"
            ],
            "properties": {
              "study_label": {
                "type": "string"
              },
              "rob_assessment": {
                "$ref": "#/$defs/RiskOfBias"
              },
              "weight_in_meta_analysis": {
                "type": "number",
                "minimum": 0,
                "maximum": 100
              },
              "source": {
                "$ref": "#/$defs/SourceRef"
              }
            },
            "additionalProperties": false
          },
          "default": []
        },
        "overall_rob_distribution": {
          "type": "object",
          "properties": {
            "low_risk_pct": {
              "type": "number",
              "minimum": 0,
              "maximum": 100
            },
            "some_concerns_pct": {
              "type": "number",
              "minimum": 0,
              "maximum": 100
            },
            "high_risk_pct": {
              "type": "number",
              "minimum": 0,
              "maximum": 100
            }
          },
          "additionalProperties": false
        }
      }
    },
    "certainty_of_evidence": {
      "type": "array",
      "description": "GRADE per outcome (if reported).",
      "items": {
        "$ref": "#/$defs/GradeAssessment"
      },
      "default": []
    },
    "publication_bias": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "funnel_plot_source": {
          "$ref": "#/$defs/SourceRef"
        },
        "egger_test_p": {
          "type": "number",
          "minimum": 0,
          "maximum": 1
        },
        "trim_and_fill_applied": {
          "type": "boolean",
          "default": false
        },
        "small_study_methods": {
          "type": "string",
          "description": "Egger, Begg, contour-enhanced funnel, selection models"
        },
        "p_curve_analysis": {
          "type": "object",
          "properties": {
            "p_curve_plot_source": {
              "$ref": "#/$defs/SourceRef"
            },
            "evidential_value": {
              "type": "string",
              "enum": [
                "present",
                "absent",
                "inadequate",
                "unclear"
              ]
            },
            "test_for_right_skew_p": {
              "type": "number",
              "minimum": 0,
              "maximum": 1
            },
            "test_for_flatness_p": {
              "type": "number",
              "minimum": 0,
              "maximum": 1
            }
          },
          "additionalProperties": false
        },
        "pet_peese": {
          "type": "object",
          "properties": {
            "pet_estimate": {
              "type": "number"
            },
            "pet_p_value": {
              "type": "number",
              "minimum": 0,
              "maximum": 1
            },
            "peese_estimate": {
              "type": "number"
            },
            "peese_p_value": {
              "type": "number",
              "minimum": 0,
              "maximum": 1
            },
            "recommended_estimate": {
              "type": "string",
              "enum": [
                "pet",
                "peese",
                "neither"
              ]
            }
          },
          "additionalProperties": false
        },
        "selection_models": {
          "type": "object",
          "properties": {
            "model_type": {
              "type": "string",
              "enum": [
                "copas",
                "3psm",
                "step_function",
                "other"
              ]
            },
            "adjusted_estimate": {
              "$ref": "#/$defs/ContrastEffect"
            },
            "tau2_adjusted": {
              "type": "number",
              "minimum": 0
            },
            "notes": {
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "excess_significance_test": {
          "type": "object",
          "properties": {
            "observed_significant": {
              "type": "integer",
              "minimum": 0
            },
            "expected_significant": {
              "type": "number",
              "minimum": 0
            },
            "p_value": {
              "type": "number",
              "minimum": 0,
              "maximum": 1
            },
            "evidence_of_bias": {
              "type": "boolean"
            }
          },
          "additionalProperties": false
        },
        "contour_enhanced_funnel": {
          "type": "object",
          "properties": {
            "plot_source": {
              "$ref": "#/$defs/SourceRef"
            },
            "pattern_interpretation": {
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "notes": {
          "type": "string"
        }
      }
    },
    "sensitivity_analyses": {
      "type": "array",
      "description": "Sensitivity analyses to test robustness of findings",
      "items": {
        "$ref": "#/$defs/SensitivityAnalysis"
      },
      "default": []
    },
    "prisma_reporting": {
      "$ref": "#/$defs/PrismaReporting"
    },
    "amstar2_rating": {
      "$ref": "#/$defs/Amstar2Assessment"
    },
    "robis_assessment": {
      "type": "object",
      "description": "ROBIS (Risk Of Bias In Systematic reviews) tool assessment",
      "additionalProperties": false,
      "properties": {
        "overall_risk_of_bias": {
          "type": "string",
          "enum": [
            "low",
            "high",
            "unclear"
          ]
        },
        "phase_1_relevance": {
          "type": "object",
          "properties": {
            "review_question_match": {
              "type": "boolean"
            },
            "concerns": {
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "phase_2_domains": {
          "type": "object",
          "properties": {
            "study_eligibility_criteria": {
              "type": "object",
              "properties": {
                "risk_of_bias": {
                  "type": "string",
                  "enum": [
                    "low",
                    "high",
                    "unclear"
                  ]
                },
                "concerns": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "identification_and_selection": {
              "type": "object",
              "properties": {
                "risk_of_bias": {
                  "type": "string",
                  "enum": [
                    "low",
                    "high",
                    "unclear"
                  ]
                },
                "concerns": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "data_collection_and_study_appraisal": {
              "type": "object",
              "properties": {
                "risk_of_bias": {
                  "type": "string",
                  "enum": [
                    "low",
                    "high",
                    "unclear"
                  ]
                },
                "concerns": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "synthesis_and_findings": {
              "type": "object",
              "properties": {
                "risk_of_bias": {
                  "type": "string",
                  "enum": [
                    "low",
                    "high",
                    "unclear"
                  ]
                },
                "concerns": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "phase_3_overall_assessment": {
          "type": "string"
        }
      }
    },
    "open_science": {
      "$ref": "#/$defs/OpenScience"
    },
    "tables_parsed": {
      "type": "array",
      "items": {
        "$ref": "#/$defs/ParsedTable"
      },
      "default": []
    },
    "figures_summary": {
      "type": "array",
      "items": {
        "$ref": "#/$defs/FigureSummary"
      },
      "default": []
    },
    "extraction_warnings": {
      "type": "array",
      "items": {
        "$ref": "#/$defs/ExtractionWarning"
      },
      "default": []
    },
    "truncated": {
      "$ref": "#/$defs/TruncationInfo"
    }
  },
  "$defs": {
    "SynthesisOutcome": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "outcome_id",
        "name",
        "type"
      ],
      "properties": {
        "outcome_id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "definition": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "binary",
            "continuous",
            "time_to_event",
            "ordinal",
            "count"
          ]
        },
        "direction_of_benefit": {
          "type": "string",
          "enum": [
            "higher_better",
            "lower_better",
            "neutral_or_na"
          ]
        },
        "preferred_effect_measure": {
          "type": "string",
          "enum": [
            "RR",
            "IRR",
            "OR",
            "HR",
            "MD",
            "SMD",
            "RD",
            "RMST",
            "Other"
          ]
        },
        "unit": {
          "type": "string"
        },
        "timepoint": {
          "type": "string"
        },
        "timepoint_iso8601": {
          "$ref": "#/$defs/ISO8601Duration"
        },
        "measurement_method": {
          "type": "string"
        },
        "scale_min": {
          "type": "number"
        },
        "scale_max": {
          "type": "number"
        },
        "source": {
          "$ref": "#/$defs/SourceRef"
        }
      }
    },
    "PooledEffect": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "effect"
      ],
      "properties": {
        "k_studies": {
          "type": "integer",
          "minimum": 1
        },
        "model": {
          "type": "string",
          "enum": [
            "fixed",
            "random",
            "bayesian",
            "na"
          ]
        },
        "method": {
          "type": "string",
          "description": "Estimator or approach (e.g., DL, REML, ML, Bayesian MCMC)"
        },
        "effect": {
          "$ref": "#/$defs/ContrastEffect"
        },
        "prediction_interval": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "lower": {
              "type": "number"
            },
            "upper": {
              "type": "number"
            }
          }
        },
        "heterogeneity": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "Q": {
              "type": "number"
            },
            "df": {
              "type": "number"
            },
            "p_Q": {
              "type": "number",
              "minimum": 0,
              "maximum": 1
            },
            "I2_pct": {
              "type": "number",
              "minimum": 0,
              "maximum": 100
            },
            "tau2": {
              "type": "number",
              "minimum": 0
            },
            "tau": {
              "type": "number",
              "minimum": 0
            },
            "H": {
              "type": "number",
              "minimum": 0
            },
            "I2_ci_lower": {
              "type": "number",
              "minimum": 0,
              "maximum": 100
            },
            "I2_ci_upper": {
              "type": "number",
              "minimum": 0,
              "maximum": 100
            },
            "tau2_ci_lower": {
              "type": "number",
              "minimum": 0
            },
            "tau2_ci_upper": {
              "type": "number",
              "minimum": 0
            }
          }
        },
        "subgroup": {
          "type": "string"
        },
        "subgroup_analysis": {
          "type": "object",
          "properties": {
            "subgroups": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "subgroup_name": {
                    "type": "string"
                  },
                  "k_studies": {
                    "type": "integer",
                    "minimum": 1
                  },
                  "pooled_effect": {
                    "$ref": "#/$defs/ContrastEffect"
                  },
                  "I2_pct": {
                    "type": "number",
                    "minimum": 0,
                    "maximum": 100
                  },
                  "tau2": {
                    "type": "number",
                    "minimum": 0
                  }
                },
                "additionalProperties": false
              }
            },
            "test_for_subgroup_differences": {
              "type": "object",
              "properties": {
                "Q_between": {
                  "type": "number",
                  "minimum": 0
                },
                "df": {
                  "type": "integer",
                  "minimum": 1
                },
                "p_value": {
                  "type": "number",
                  "minimum": 0,
                  "maximum": 1
                },
                "I2_between_pct": {
                  "type": "number",
                  "minimum": 0,
                  "maximum": 100
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "meta_regression": {
          "type": "object",
          "properties": {
            "covariates": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "covariate_name": {
                    "type": "string"
                  },
                  "coefficient": {
                    "type": "number"
                  },
                  "se": {
                    "type": "number",
                    "minimum": 0
                  },
                  "ci_lower": {
                    "type": "number"
                  },
                  "ci_upper": {
                    "type": "number"
                  },
                  "p_value": {
                    "type": "number",
                    "minimum": 0,
                    "maximum": 1
                  },
                  "standardized": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              }
            },
            "model_fit": {
              "type": "object",
              "properties": {
                "R2": {
                  "type": "number",
                  "minimum": 0,
                  "maximum": 1,
                  "description": "Proportion of heterogeneity explained"
                },
                "tau2_residual": {
                  "type": "number",
                  "minimum": 0
                },
                "QM": {
                  "type": "number",
                  "description": "Test statistic for moderators"
                },
                "QM_p": {
                  "type": "number",
                  "minimum": 0,
                  "maximum": 1
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "outlier_detection": {
          "type": "object",
          "properties": {
            "method": {
              "type": "string",
              "enum": [
                "studentized_residuals",
                "cooks_distance",
                "dffits",
                "other"
              ]
            },
            "outliers_identified": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "study_label": {
                    "type": "string"
                  },
                  "statistic_value": {
                    "type": "number"
                  },
                  "threshold": {
                    "type": "number"
                  },
                  "influential": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "additionalProperties": false
        },
        "meta_regression_terms": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": []
        },
        "notes": {
          "type": "string"
        },
        "source": {
          "$ref": "#/$defs/SourceRef"
        }
      }
    },
    "PairwiseMetaAnalysis": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "comparison_label",
        "outcome_id",
        "pooled"
      ],
      "properties": {
        "comparison_label": {
          "type": "string",
          "description": "e.g., Drug A vs placebo"
        },
        "outcome_id": {
          "type": "string"
        },
        "per_study_effects": {
          "type": "array",
          "description": "Optional: study-level effect sizes contributing to the pool",
          "items": {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "study_label",
              "effect"
            ],
            "properties": {
              "study_label": {
                "type": "string"
              },
              "effect": {
                "$ref": "#/$defs/ContrastEffect"
              },
              "weight_pct": {
                "type": "number",
                "minimum": 0,
                "maximum": 100
              },
              "source": {
                "$ref": "#/$defs/SourceRef"
              }
            }
          },
          "default": []
        },
        "pooled": {
          "$ref": "#/$defs/PooledEffect"
        }
      }
    },
    "NetworkMetaAnalysis": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "outcome_id",
        "treatments",
        "reference_treatment",
        "model",
        "pooled_effects"
      ],
      "properties": {
        "outcome_id": {
          "type": "string"
        },
        "treatments": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "minItems": 2
        },
        "reference_treatment": {
          "type": "string"
        },
        "model": {
          "type": "string",
          "enum": [
            "fixed",
            "random",
            "bayesian"
          ]
        },
        "consistency_assumed": {
          "type": "boolean",
          "default": true
        },
        "pooled_effects": {
          "type": "array",
          "description": "Relative effects for pairs vs reference or all pairs.",
          "items": {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "treatment_a",
              "treatment_b",
              "effect"
            ],
            "properties": {
              "treatment_a": {
                "type": "string"
              },
              "treatment_b": {
                "type": "string"
              },
              "effect": {
                "$ref": "#/$defs/ContrastEffect"
              },
              "source": {
                "$ref": "#/$defs/SourceRef"
              }
            }
          }
        },
        "ranking": {
          "type": "array",
          "description": "Optional ranking metrics per treatment (e.g., SUCRA).",
          "items": {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "treatment",
              "metric_name",
              "value"
            ],
            "properties": {
              "treatment": {
                "type": "string"
              },
              "metric_name": {
                "type": "string",
                "enum": [
                  "SUCRA",
                  "P(best)",
                  "other"
                ]
              },
              "value": {
                "type": "number",
                "minimum": 0
              }
            }
          },
          "default": []
        },
        "inconsistency": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "global_test_p": {
              "type": "number",
              "minimum": 0,
              "maximum": 1
            },
            "node_splitting": {
              "type": "array",
              "items": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "comparison": {
                    "type": "string"
                  },
                  "p_inconsistency": {
                    "type": "number",
                    "minimum": 0,
                    "maximum": 1
                  },
                  "direct_estimate": {
                    "$ref": "#/$defs/ContrastEffect"
                  },
                  "indirect_estimate": {
                    "$ref": "#/$defs/ContrastEffect"
                  },
                  "difference": {
                    "type": "number"
                  }
                }
              },
              "default": []
            },
            "design_by_treatment": {
              "type": "string"
            },
            "side_splitting": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "comparison": {
                    "type": "string"
                  },
                  "p_inconsistency": {
                    "type": "number",
                    "minimum": 0,
                    "maximum": 1
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "transitivity_assessment": {
          "type": "object",
          "properties": {
            "assessment": {
              "type": "string",
              "enum": [
                "plausible",
                "questionable",
                "implausible",
                "not_assessed"
              ]
            },
            "narrative": {
              "type": "string"
            },
            "effect_modifiers_balanced": {
              "type": "boolean"
            },
            "similarity_table_source": {
              "$ref": "#/$defs/SourceRef"
            }
          },
          "additionalProperties": false
        },
        "network_geometry": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "nodes": {
              "type": "integer",
              "minimum": 0
            },
            "edges": {
              "type": "integer",
              "minimum": 0
            },
            "two_armed_loops": {
              "type": "integer",
              "minimum": 0
            },
            "multi_arm_studies": {
              "type": "integer",
              "minimum": 0
            },
            "network_plot_source": {
              "$ref": "#/$defs/SourceRef"
            }
          }
        },
        "contribution_matrix": {
          "type": "object",
          "description": "Contribution of each direct comparison to network estimates",
          "properties": {
            "matrix_source": {
              "$ref": "#/$defs/SourceRef"
            },
            "contributions": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "direct_comparison": {
                    "type": "string"
                  },
                  "network_estimate": {
                    "type": "string"
                  },
                  "contribution_pct": {
                    "type": "number",
                    "minimum": 0,
                    "maximum": 100
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "additionalProperties": false
        },
        "comparison_adjusted_funnel_plot": {
          "type": "object",
          "properties": {
            "plot_source": {
              "$ref": "#/$defs/SourceRef"
            },
            "interpretation": {
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "league_table": {
          "type": "object",
          "properties": {
            "table_source": {
              "$ref": "#/$defs/SourceRef"
            },
            "format": {
              "type": "string",
              "enum": [
                "upper_triangle",
                "lower_triangle",
                "full_matrix"
              ]
            }
          },
          "additionalProperties": false
        },
        "cinema_assessment": {
          "type": "object",
          "description": "CINeMA (Confidence in Network Meta-Analysis) framework for GRADE in NMA",
          "properties": {
            "within_study_bias": {
              "type": "string",
              "enum": [
                "no_concerns",
                "some_concerns",
                "major_concerns"
              ]
            },
            "reporting_bias": {
              "type": "string",
              "enum": [
                "no_concerns",
                "some_concerns",
                "major_concerns"
              ]
            },
            "indirectness": {
              "type": "string",
              "enum": [
                "no_concerns",
                "some_concerns",
                "major_concerns"
              ]
            },
            "imprecision": {
              "type": "string",
              "enum": [
                "no_concerns",
                "some_concerns",
                "major_concerns"
              ]
            },
            "heterogeneity": {
              "type": "string",
              "enum": [
                "no_concerns",
                "some_concerns",
                "major_concerns"
              ]
            },
            "incoherence": {
              "type": "string",
              "enum": [
                "no_concerns",
                "some_concerns",
                "major_concerns"
              ]
            },
            "overall_confidence": {
              "type": "string",
              "enum": [
                "high",
                "moderate",
                "low",
                "very_low"
              ]
            }
          },
          "additionalProperties": false
        },
        "notes": {
          "type": "string"
        }
      }
    },
    "IPDMetaAnalysis": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "outcome_id",
        "model"
      ],
      "properties": {
        "outcome_id": {
          "type": "string"
        },
        "model": {
          "type": "string",
          "enum": [
            "one_stage",
            "two_stage"
          ]
        },
        "covariates": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": []
        },
        "effect_modifier_analysis": {
          "type": "string"
        },
        "pooled": {
          "$ref": "#/$defs/PooledEffect"
        }
      }
    },
    "NarrativeSynthesis": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "outcome_id",
        "summary_text"
      ],
      "properties": {
        "outcome_id": {
          "type": "string"
        },
        "summary_text": {
          "type": "string"
        },
        "fig_or_table": {
          "$ref": "#/$defs/SourceRef"
        }
      }
    },
    "Synthesis": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "type",
        "outcome_id"
      ],
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "narrative",
            "pairwise_meta",
            "network_meta",
            "ipd_meta",
            "umbrella_summary"
          ]
        },
        "outcome_id": {
          "type": "string"
        },
        "pairwise_meta": {
          "$ref": "#/$defs/PairwiseMetaAnalysis"
        },
        "network_meta": {
          "$ref": "#/$defs/NetworkMetaAnalysis"
        },
        "ipd_meta": {
          "$ref": "#/$defs/IPDMetaAnalysis"
        },
        "narrative": {
          "$ref": "#/$defs/NarrativeSynthesis"
        },
        "umbrella_summary": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "evidence_map": {
              "type": "string"
            },
            "key_findings": {
              "type": "string"
            },
            "source": {
              "$ref": "#/$defs/SourceRef"
            }
          }
        }
      }
    },
    "GradeAssessment": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "outcome_id",
        "certainty"
      ],
      "properties": {
        "outcome_id": {
          "type": "string"
        },
        "certainty": {
          "type": "string",
          "enum": [
            "high",
            "moderate",
            "low",
            "very_low"
          ]
        },
        "starting_certainty": {
          "type": "string",
          "enum": [
            "high",
            "low"
          ],
          "description": "Starting level for RCTs (high) or observational (low)"
        },
        "domains": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "risk_of_bias": {
              "type": "string",
              "enum": [
                "no_serious",
                "serious",
                "very_serious",
                "unclear"
              ]
            },
            "inconsistency": {
              "type": "string",
              "enum": [
                "no_serious",
                "serious",
                "very_serious",
                "unclear"
              ]
            },
            "indirectness": {
              "type": "string",
              "enum": [
                "no_serious",
                "serious",
                "very_serious",
                "unclear"
              ]
            },
            "imprecision": {
              "type": "string",
              "enum": [
                "no_serious",
                "serious",
                "very_serious",
                "unclear"
              ]
            },
            "publication_bias": {
              "type": "string",
              "enum": [
                "no_serious",
                "serious",
                "very_serious",
                "unclear"
              ]
            },
            "other": {
              "type": "string"
            }
          }
        },
        "upgrade_factors": {
          "type": "object",
          "description": "Factors that may increase certainty for observational studies",
          "properties": {
            "large_effect": {
              "type": "string",
              "enum": [
                "none",
                "large",
                "very_large"
              ],
              "description": "RR >2 or <0.5 (large), >5 or <0.2 (very large)"
            },
            "dose_response_gradient": {
              "type": "boolean",
              "description": "Evidence of dose-response relationship"
            },
            "plausible_confounding": {
              "type": "boolean",
              "description": "All plausible confounding would reduce effect"
            }
          },
          "additionalProperties": false
        },
        "absolute_effects": {
          "type": "object",
          "properties": {
            "baseline_risk": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "number",
                  "minimum": 0,
                  "maximum": 1
                },
                "source": {
                  "type": "string",
                  "description": "Source of baseline risk estimate"
                },
                "risk_category": {
                  "type": "string",
                  "enum": [
                    "low",
                    "moderate",
                    "high"
                  ]
                }
              },
              "additionalProperties": false
            },
            "absolute_effect_per_1000": {
              "type": "object",
              "properties": {
                "control_risk": {
                  "type": "number"
                },
                "intervention_risk": {
                  "type": "number"
                },
                "absolute_difference": {
                  "type": "number"
                },
                "ci_lower": {
                  "type": "number"
                },
                "ci_upper": {
                  "type": "number"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "summary_of_findings": {
          "type": "object",
          "properties": {
            "n_participants": {
              "type": "integer",
              "minimum": 0
            },
            "n_studies": {
              "type": "integer",
              "minimum": 0
            },
            "relative_effect": {
              "$ref": "#/$defs/ContrastEffect"
            },
            "anticipated_absolute_effects": {
              "type": "string"
            },
            "plain_language_summary": {
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "footnotes": {
          "type": "string"
        },
        "summary_of_findings_source": {
          "$ref": "#/$defs/SourceRef"
        }
      }
    },
    "PrismaReporting": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "version": {
          "type": "string",
          "enum": [
            "PRISMA 2020",
            "PRISMA 2020-ScR",
            "PRISMA-NMA",
            "PRISMA-IPD",
            "PRISMA-S",
            "PRISMA-A",
            "MOOSE",
            "other"
          ],
          "default": "PRISMA 2020"
        },
        "claimed": {
          "type": "boolean",
          "default": false,
          "description": "Authors claim PRISMA adherence"
        },
        "flow_diagram_present": {
          "type": "boolean",
          "default": false
        },
        "checklist_available": {
          "type": "boolean",
          "default": false
        },
        "items": {
          "type": "array",
          "description": "Item-by-item PRISMA reporting status.",
          "items": {
            "$ref": "#/$defs/PrismaItem"
          },
          "default": []
        },
        "adherence_summary": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "items_reported_count": {
              "type": "integer",
              "minimum": 0
            },
            "items_total_expected": {
              "type": "integer",
              "minimum": 0
            },
            "adherence_pct": {
              "type": "number",
              "minimum": 0,
              "maximum": 100
            }
          }
        },
        "checklist_source": {
          "$ref": "#/$defs/SourceRef"
        },
        "notes": {
          "type": "string"
        }
      }
    },
    "PrismaItem": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "item_id",
        "reported"
      ],
      "properties": {
        "item_id": {
          "$ref": "#/$defs/PrismaItemId"
        },
        "name": {
          "type": "string",
          "description": "Short title of the PRISMA item (optional)"
        },
        "section": {
          "type": "string",
          "description": "Section of manuscript where item should appear"
        },
        "reported": {
          "type": "string",
          "enum": [
            "yes",
            "partially",
            "no",
            "unclear"
          ]
        },
        "location": {
          "type": "string",
          "description": "Page/figure/appendix location"
        },
        "source": {
          "$ref": "#/$defs/SourceRef"
        },
        "notes": {
          "type": "string"
        }
      }
    },
    "PrismaItemId": {
      "type": "string",
      "description": "Enumerated PRISMA 2020 checklist item or sub-item code.",
      "enum": [
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7",
        "8",
        "9",
        "10a",
        "10b",
        "11",
        "12",
        "13a",
        "13b",
        "13c",
        "13d",
        "13e",
        "13f",
        "14",
        "15",
        "16a",
        "16b",
        "17",
        "18",
        "19",
        "20a",
        "20b",
        "20c",
        "20d",
        "21",
        "22",
        "23a",
        "23b",
        "23c",
        "23d",
        "24a",
        "24b",
        "24c",
        "25",
        "26",
        "27"
      ]
    },
    "Amstar2Assessment": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "overall": {
          "type": "string",
          "enum": [
            "high",
            "moderate",
            "low",
            "critically_low"
          ]
        },
        "rationale": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "description": "AMSTAR 2 item-level ratings (1–16). Mark critical domains with critical=true.",
          "items": {
            "$ref": "#/$defs/Amstar2Item"
          },
          "default": []
        },
        "critical_domains": {
          "type": "array",
          "description": "List of item_ids marked critical in this assessment (subset of 1–16).",
          "items": {
            "type": "string",
            "pattern": "^(?:[1-9]|1[0-6])$"
          },
          "default": []
        },
        "source": {
          "$ref": "#/$defs/SourceRef"
        }
      }
    },
    "Amstar2Item": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "item_id",
        "rating"
      ],
      "properties": {
        "item_id": {
          "type": "string",
          "pattern": "^(?:[1-9]|1[0-6])$",
          "description": "AMSTAR 2 item 1–16"
        },
        "rating": {
          "type": "string",
          "enum": [
            "yes",
            "partial_yes",
            "no",
            "not_applicable",
            "unclear"
          ]
        },
        "critical": {
          "type": "boolean",
          "default": false
        },
        "notes": {
          "type": "string"
        }
      }
    },
    "OpenScience": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "data_availability": {
          "$ref": "#/$defs/Availability"
        },
        "code_availability": {
          "$ref": "#/$defs/Availability"
        }
      }
    },
    "Availability": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "statement": {
          "type": "string",
          "description": "Verbatim of summarized availability statement"
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/AvailabilityLink"
          },
          "default": []
        },
        "source": {
          "$ref": "#/$defs/SourceRef"
        }
      }
    },
    "AvailabilityLink": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "url"
      ],
      "properties": {
        "label": {
          "type": "string"
        },
        "url": {
          "type": "string",
          "format": "uri"
        },
        "doi": {
          "type": "string",
          "pattern": "^10\\.\\d{4,9}/[-._;()/:A-Za-z0-9]+$"
        },
        "access": {
          "type": "string",
          "enum": [
            "open",
            "restricted",
            "upon_request",
            "embargoed",
            "unknown"
          ]
        },
        "license": {
          "type": "string",
          "description": "e.g., CC BY 4.0, GPL-3.0"
        },
        "notes": {
          "type": "string"
        }
      }
    },
    "SensitivityAnalysis": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "analysis_type",
        "outcome_id"
      ],
      "properties": {
        "analysis_type": {
          "type": "string",
          "enum": [
            "leave_one_out",
            "fixed_vs_random",
            "alternative_effect_measure",
            "risk_of_bias_restriction",
            "imputation_method",
            "outlier_exclusion",
            "subgroup_exclusion",
            "publication_year_restriction",
            "other"
          ]
        },
        "outcome_id": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "leave_one_out": {
          "type": "object",
          "properties": {
            "results": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "excluded_study": {
                    "type": "string"
                  },
                  "pooled_effect": {
                    "$ref": "#/$defs/ContrastEffect"
                  },
                  "I2_pct": {
                    "type": "number",
                    "minimum": 0,
                    "maximum": 100
                  },
                  "tau2": {
                    "type": "number",
                    "minimum": 0
                  }
                },
                "additionalProperties": false
              }
            },
            "influential_studies": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Studies whose exclusion substantially changes results"
            }
          },
          "additionalProperties": false
        },
        "fixed_vs_random_comparison": {
          "type": "object",
          "properties": {
            "fixed_effect": {
              "$ref": "#/$defs/ContrastEffect"
            },
            "random_effect": {
              "$ref": "#/$defs/ContrastEffect"
            },
            "agreement": {
              "type": "string",
              "enum": [
                "consistent",
                "minor_difference",
                "substantial_difference"
              ]
            }
          },
          "additionalProperties": false
        },
        "alternative_effect_measure": {
          "type": "object",
          "properties": {
            "original_measure": {
              "type": "string"
            },
            "alternative_measure": {
              "type": "string"
            },
            "alternative_pooled_effect": {
              "$ref": "#/$defs/ContrastEffect"
            },
            "conclusion_changed": {
              "type": "boolean"
            }
          },
          "additionalProperties": false
        },
        "rob_restriction": {
          "type": "object",
          "properties": {
            "inclusion_criteria": {
              "type": "string",
              "description": "e.g., 'only low risk of bias studies'"
            },
            "k_studies_included": {
              "type": "integer",
              "minimum": 0
            },
            "restricted_pooled_effect": {
              "$ref": "#/$defs/ContrastEffect"
            },
            "conclusion_changed": {
              "type": "boolean"
            }
          },
          "additionalProperties": false
        },
        "result": {
          "type": "object",
          "properties": {
            "pooled_effect": {
              "$ref": "#/$defs/ContrastEffect"
            },
            "robustness_assessment": {
              "type": "string",
              "enum": [
                "robust",
                "moderately_robust",
                "not_robust",
                "unclear"
              ]
            },
            "interpretation": {
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "source": {
          "$ref": "#/$defs/SourceRef"
        }
      }
    },
    "Registration": {
      "type": "object",
      "additionalProperties": false,
      "description": "Clinical trial or study registration information",
      "properties": {
        "registry": {
          "type": "string",
          "enum": [
            "ClinicalTrials.gov",
            "ISRCTN",
            "EudraCT",
            "EU-CTR",
            "CTIS",
            "ChiCTR",
            "ANZCTR",
            "UMIN-CTR",
            "JPRN",
            "PACTR",
            "IRCT",
            "DRKS",
            "TCTR",
            "SLCTR",
            "RPCEC",
            "REBEC",
            "Other"
          ],
          "description": "Clinical trial registry (includes major international and regional registries)"
        },
        "identifier": {
          "type": "string",
          "description": "Registration identifier within the registry",
          "examples": [
            "NCT04123456",
            "ISRCTN12345678",
            "2020-001234-56",
            "UMIN000012345"
          ]
        },
        "url": {
          "type": "string",
          "format": "uri",
          "description": "Direct URL to the registration record"
        }
      },
      "allOf": [
        {
          "if": {
            "properties": {
              "registry": {
                "const": "ClinicalTrials.gov"
              }
            }
          },
          "then": {
            "properties": {
              "identifier": {
                "pattern": "^NCT\\d{8}$",
                "description": "ClinicalTrials.gov identifier format: NCT followed by 8 digits"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "registry": {
                "const": "ISRCTN"
              }
            }
          },
          "then": {
            "properties": {
              "identifier": {
                "pattern": "^ISRCTN\\d{8}$",
                "description": "ISRCTN identifier format: ISRCTN followed by 8 digits"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "registry": {
                "const": "EudraCT"
              }
            }
          },
          "then": {
            "properties": {
              "identifier": {
                "pattern": "^\\d{4}-\\d{6}-\\d{2}$",
                "description": "EudraCT identifier format: YYYY-NNNNNN-NN"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "registry": {
                "const": "UMIN-CTR"
              }
            }
          },
          "then": {
            "properties": {
              "identifier": {
                "pattern": "^UMIN\\d{9}$",
                "description": "UMIN-CTR identifier format: UMIN followed by 9 digits"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "registry": {
                "const": "ChiCTR"
              }
            }
          },
          "then": {
            "properties": {
              "identifier": {
                "pattern": "^ChiCTR\\d{10}$",
                "description": "ChiCTR identifier format: ChiCTR followed by 10 digits"
              }
            }
          }
        }
      ]
    },
    "ExtractionWarning": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "TABLE_PARSE_FAIL",
            "AMBIGUOUS_UNIT",
            "CI_PARSE_FAIL",
            "MISSING_ARM_ID",
            "MISSING_GROUP_ID",
            "OTHER"
          ]
        },
        "message": {
          "type": "string"
        },
        "source": {
          "$ref": "#/$defs/SourceRef"
        }
      }
    },
    "LanguageCode": {
      "type": "string",
      "pattern": "^[a-z]{2,3}(-[A-Z]{2})?(-[a-z]{2,8})*$",
      "description": "BCP 47 language tag supporting language, region, and variants (e.g., 'en-US', 'zh-Hans-CN', 'ar-EG')",
      "examples": [
        "en",
        "en-US",
        "en-GB",
        "nl",
        "nl-NL",
        "nl-BE",
        "de-DE",
        "fr-FR",
        "es-ES",
        "zh-Hans",
        "zh-Hant",
        "ar-EG",
        "he-IL"
      ]
    },
    "TruncationInfo": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "value": {
          "type": "boolean",
          "default": false
        },
        "reason": {
          "type": "string",
          "enum": [
            "token_limit",
            "page_limit",
            "timeout",
            "other"
          ]
        }
      }
    },
    "ParsedTable": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "table_id",
        "title"
      ],
      "properties": {
        "table_id": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "page": {
          "type": "integer",
          "minimum": 1
        },
        "type": {
          "type": "string",
          "enum": [
            "baseline",
            "outcomes",
            "harms",
            "methods",
            "other"
          ]
        },
        "rows": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "cells"
            ],
            "properties": {
              "cells": {
                "type": "array",
                "minItems": 1,
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "default": []
        },
        "source": {
          "$ref": "#/$defs/SourceRef"
        }
      }
    },
    "Metadata": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "title",
        "journal"
      ],
      "properties": {
        "title": {
          "type": "string"
        },
        "journal": {
          "type": "string"
        },
        "journal_abbrev": {
          "type": "string"
        },
        "published_date": {
          "type": "string",
          "format": "date"
        },
        "published_date_precision": {
          "type": "string",
          "enum": [
            "year",
            "month",
            "day"
          ]
        },
        "volume": {
          "type": "string"
        },
        "issue": {
          "type": "string"
        },
        "pages": {
          "type": "string"
        },
        "page_start": {
          "type": "string"
        },
        "page_end": {
          "type": "string"
        },
        "article_number": {
          "type": "string"
        },
        "elocation_id": {
          "type": "string"
        },
        "issn": {
          "type": "string",
          "pattern": "^\\d{4}-\\d{3}[\\dxX]$",
          "description": "International Standard Serial Number (print version)"
        },
        "eissn": {
          "type": "string",
          "pattern": "^\\d{4}-\\d{3}[\\dxX]$",
          "description": "Electronic International Standard Serial Number"
        },
        "authors": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/Author"
          },
          "default": []
        },
        "pmid": {
          "type": "string",
          "pattern": "^\\d{1,8}$"
        },
        "pmcid": {
          "type": "string",
          "pattern": "^PMC\\d+$"
        },
        "doi": {
          "type": "string",
          "pattern": "^10\\.\\d{4,}(\\.\\d+)?/[-._;()/:A-Za-z0-9\\[\\]]+$",
          "description": "DOI with comprehensive character support including brackets and extended punctuation",
          "examples": [
            "10.1056/NEJMoa2001017",
            "10.1002/(SICI)1097-0142(19960101)77:1<1::AID-CNCR1>3.0.CO;2-Z"
          ]
        },
        "registration": {
          "$ref": "#/$defs/Registration"
        },
        "protocol_ref": {
          "type": "string"
        },
        "funding": {
          "type": "string"
        },
        "conflict_of_interest": {
          "type": "string"
        },
        "epub_ahead_of_print_date": {
          "type": "string"
        },
        "vancouver_citation": {
          "type": "string"
        },
        "vancouver_source": {
          "$ref": "#/$defs/SourceRef"
        },
        "source": {
          "$ref": "#/$defs/SourceRef"
        },
        "external_ids": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/ExternalId"
          },
          "default": []
        },
        "supplements": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/SupplementFile"
          },
          "default": []
        },
        "parsing_context": {
          "$ref": "#/$defs/ParsingContext"
        },
        "content_hash_sha256": {
          "type": "string",
          "pattern": "^[a-fA-F0-9]{64}$",
          "description": "SHA-256 hash van bronbestand of platte tekst (64-char hex)"
        }
      },
      "dependentSchemas": {
        "published_date_precision": {
          "required": [
            "published_date"
          ],
          "properties": {
            "published_date_precision": {
              "description": "Precision can only be specified if published_date is present"
            }
          }
        },
        "page_end": {
          "required": [
            "page_start"
          ],
          "properties": {
            "page_end": {
              "description": "End page requires start page to be specified"
            }
          }
        },
        "vancouver_source": {
          "required": [
            "vancouver_citation"
          ],
          "properties": {
            "vancouver_source": {
              "description": "Vancouver source reference requires vancouver_citation to be present"
            }
          }
        }
      },
      "allOf": [
        {
          "if": {
            "properties": {
              "published_date_precision": {
                "const": "day"
              }
            }
          },
          "then": {
            "properties": {
              "published_date": {
                "pattern": "^\\d{4}-\\d{2}-\\d{2}$",
                "description": "Day precision requires full date format YYYY-MM-DD"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "published_date_precision": {
                "const": "month"
              }
            }
          },
          "then": {
            "properties": {
              "published_date": {
                "pattern": "^\\d{4}-\\d{2}(-\\d{2})?$",
                "description": "Month precision allows YYYY-MM or YYYY-MM-DD format"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "published_date_precision": {
                "const": "year"
              }
            }
          },
          "then": {
            "properties": {
              "published_date": {
                "pattern": "^\\d{4}(-\\d{2}(-\\d{2})?)?$",
                "description": "Year precision allows YYYY, YYYY-MM, or YYYY-MM-DD format"
              }
            }
          }
        }
      ]
    },
    "ContrastEffect": {
      "type": "object",
      "additionalProperties": false,
      "description": "Statistical effect estimate with confidence interval",
      "required": [
        "type",
        "point"
      ],
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "RR",
            "IRR",
            "OR",
            "HR",
            "MD",
            "SMD",
            "RD",
            "RMST",
            "Other"
          ],
          "description": "Type of effect measure (RR=Risk Ratio, OR=Odds Ratio, HR=Hazard Ratio, etc.)"
        },
        "point": {
          "type": "number",
          "description": "Point estimate of the effect"
        },
        "ci": {
          "$ref": "#/$defs/EffectCI"
        },
        "credible_interval": {
          "$ref": "#/$defs/BayesianInterval"
        },
        "p_value": {
          "type": "number",
          "minimum": 0,
          "maximum": 1,
          "description": "Statistical significance p-value"
        },
        "bayes_factor": {
          "type": "number",
          "minimum": 0,
          "description": "Bayesian evidence ratio (BF10 or BF01)"
        },
        "posterior_probability": {
          "type": "number",
          "minimum": 0,
          "maximum": 1,
          "description": "Posterior probability of effect direction"
        },
        "favors": {
          "type": "string",
          "enum": [
            "treatment_or_exposure",
            "control_or_reference",
            "neutral",
            "unclear"
          ],
          "default": "neutral",
          "description": "Which group the effect favors based on clinical interpretation"
        }
      }
    },
    "FigureSummary": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "figure_id",
        "caption"
      ],
      "properties": {
        "figure_id": {
          "type": "string"
        },
        "caption": {
          "type": "string"
        },
        "key_values": {
          "type": "object",
          "additionalProperties": {
            "type": "number"
          },
          "default": {}
        },
        "page": {
          "type": "integer",
          "minimum": 1
        },
        "source": {
          "$ref": "#/$defs/SourceRef"
        }
      }
    },
    "ISO8601Duration": {
      "$anchor": "duration",
      "type": "string",
      "pattern": "^P(?:(?:\\d+Y)?(?:\\d+M)?(?:\\d+W)?(?:\\d+D)?)?(?:T(?:\\d+H)?(?:\\d+M)?(?:\\d+(?:\\.\\d+)?S)?)?$",
      "description": "Strict ISO 8601 duration (e.g., 'P30D', 'PT24H', 'P2W', 'P1Y2M3DT4H5M6S').",
      "examples": [
        "P30D",
        "PT24H",
        "P2W",
        "P6M",
        "P1Y",
        "PT2H30M",
        "P1Y2M3DT4H5M6.789S"
      ]
    },
    "SupplementFile": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "label"
      ],
      "properties": {
        "label": {
          "type": "string"
        },
        "filename": {
          "type": "string"
        },
        "url": {
          "type": "string",
          "format": "uri"
        },
        "doi": {
          "type": "string",
          "pattern": "^10\\.\\d{4,9}/[-._;()/:A-Za-z0-9]+$"
        },
        "content_type": {
          "type": "string"
        },
        "file_size": {
          "type": "integer",
          "minimum": 0,
          "description": "File size in bytes"
        },
        "checksum": {
          "$ref": "#/$defs/DataIntegrity"
        }
      }
    },
    "SourceRef": {
      "type": "object",
      "additionalProperties": false,
      "description": "Reference to a specific location within a document",
      "properties": {
        "anchor": {
          "type": "string",
          "description": "Free-text pointer like 'Table 2', 'Fig 1', or sentence quote"
        },
        "page": {
          "type": "integer",
          "minimum": 1,
          "description": "Page number within the document"
        },
        "figure_id": {
          "type": "string",
          "description": "Identifier of a specific figure"
        },
        "table_id": {
          "type": "string",
          "description": "Identifier of a specific table"
        }
      }
    },
    "RiskOfBias": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "tool": {
          "type": "string",
          "enum": [
            "RoB2",
            "ROBINS-I",
            "PROBAST",
            "Other"
          ]
        },
        "overall": {
          "type": "string"
        },
        "domains": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "domain",
              "judgement"
            ],
            "properties": {
              "domain": {
                "type": "string"
              },
              "judgement": {
                "type": "string",
                "enum": [
                  "low",
                  "some",
                  "high",
                  "unclear",
                  "moderate",
                  "serious",
                  "critical",
                  "no_information",
                  "some_concerns"
                ]
              },
              "notes": {
                "type": "string"
              }
            }
          },
          "default": []
        },
        "applicability": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "participants": {
              "type": "string",
              "enum": [
                "low",
                "high",
                "unclear"
              ]
            },
            "predictors": {
              "type": "string",
              "enum": [
                "low",
                "high",
                "unclear"
              ]
            },
            "outcome": {
              "type": "string",
              "enum": [
                "low",
                "high",
                "unclear"
              ]
            },
            "notes": {
              "type": "string"
            }
          }
        },
        "provenance": {
          "$ref": "#/$defs/Provenance"
        }
      },
      "allOf": [
        {
          "if": {
            "properties": {
              "tool": {
                "const": "RoB2"
              }
            }
          },
          "then": {
            "properties": {
              "overall": {
                "type": "string",
                "enum": [
                  "low",
                  "some_concerns",
                  "high",
                  "unclear"
                ]
              },
              "domains": {
                "items": {
                  "properties": {
                    "domain": {
                      "type": "string",
                      "enum": [
                        "randomization_process",
                        "deviations_from_intended_interventions",
                        "missing_outcome_data",
                        "measurement_of_outcome",
                        "selection_of_reported_result"
                      ]
                    },
                    "judgement": {
                      "type": "string",
                      "enum": [
                        "low",
                        "some_concerns",
                        "high",
                        "unclear"
                      ]
                    }
                  }
                },
                "minItems": 5
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "tool": {
                "const": "ROBINS-I"
              }
            }
          },
          "then": {
            "properties": {
              "overall": {
                "type": "string",
                "enum": [
                  "low",
                  "moderate",
                  "serious",
                  "critical",
                  "no_information"
                ]
              },
              "domains": {
                "items": {
                  "properties": {
                    "domain": {
                      "type": "string",
                      "enum": [
                        "bias_due_to_confounding",
                        "bias_in_selection_of_participants",
                        "bias_in_classification_of_interventions",
                        "bias_due_to_deviations_from_intended_interventions",
                        "bias_due_to_missing_data",
                        "bias_in_measurement_of_outcomes",
                        "bias_in_selection_of_reported_result"
                      ]
                    },
                    "judgement": {
                      "type": "string",
                      "enum": [
                        "low",
                        "moderate",
                        "serious",
                        "critical",
                        "no_information"
                      ]
                    }
                  }
                },
                "minItems": 7
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "tool": {
                "const": "PROBAST"
              }
            }
          },
          "then": {
            "properties": {
              "overall": {
                "type": "string",
                "enum": [
                  "low",
                  "high",
                  "unclear"
                ]
              },
              "domains": {
                "items": {
                  "properties": {
                    "domain": {
                      "type": "string",
                      "enum": [
                        "participants",
                        "predictors",
                        "outcome",
                        "analysis"
                      ]
                    },
                    "judgement": {
                      "type": "string",
                      "enum": [
                        "low",
                        "high",
                        "unclear"
                      ]
                    }
                  }
                },
                "minItems": 4
              },
              "applicability": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "participants": {
                    "type": "string",
                    "enum": [
                      "low",
                      "high",
                      "unclear"
                    ]
                  },
                  "predictors": {
                    "type": "string",
                    "enum": [
                      "low",
                      "high",
                      "unclear"
                    ]
                  },
                  "outcome": {
                    "type": "string",
                    "enum": [
                      "low",
                      "high",
                      "unclear"
                    ]
                  },
                  "notes": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      ]
    },
    "Author": {
      "type": "object",
      "additionalProperties": false,
      "description": "Author information for academic publications",
      "required": [
        "last_name"
      ],
      "properties": {
        "last_name": {
          "type": "string",
          "description": "Author's family name"
        },
        "initials": {
          "type": "string",
          "description": "Author's first/middle name initials"
        },
        "given_names": {
          "type": "string",
          "description": "Author's full first and middle names"
        },
        "orcid": {
          "type": "string",
          "pattern": "^(https://orcid\\.org/)?0000-00(0[2-9]|[1-9]\\d)-\\d{4}-\\d{3}[\\dX]$",
          "description": "ORCID identifier with checksum validation (optionally with URL prefix)",
          "examples": [
            "0000-0002-1825-0097",
            "https://orcid.org/0000-0002-1825-0097"
          ]
        },
        "affiliations": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [],
          "description": "Author's institutional affiliations"
        },
        "corresponding": {
          "type": "boolean",
          "default": false,
          "description": "Whether this author is the corresponding author"
        },
        "email": {
          "$ref": "#/$defs/EmailAddress",
          "description": "Contact email address (typically for corresponding authors)"
        }
      }
    },
    "ParsingContext": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "parser_name",
        "parsing_timestamp"
      ],
      "properties": {
        "parser_name": {
          "type": "string",
          "description": "Name of the parsing tool/library used"
        },
        "parser_version": {
          "type": "string",
          "description": "Version of the parsing tool"
        },
        "parsing_timestamp": {
          "type": "string",
          "format": "date-time",
          "description": "When parsing was performed"
        },
        "language_detected": {
          "$ref": "#/$defs/LanguageCode",
          "description": "Detected language of the document"
        },
        "ocr_engine": {
          "type": "string",
          "description": "OCR engine used (if applicable)"
        },
        "ocr_quality_score": {
          "type": "number",
          "minimum": 0,
          "maximum": 1,
          "description": "Overall OCR quality assessment"
        },
        "pdf_producer": {
          "type": "string",
          "description": "Software that generated the PDF"
        },
        "page_count": {
          "type": "integer",
          "minimum": 1,
          "description": "Total pages in document"
        },
        "sections_detected": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [],
          "description": "Document sections automatically detected"
        },
        "parsing_warnings": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [],
          "description": "Warnings encountered during parsing"
        },
        "ai_processing": {
          "$ref": "#/$defs/AIProcessingMetadata"
        }
      }
    },
    "BayesianInterval": {
      "type": "object",
      "additionalProperties": false,
      "description": "Bayesian credible interval",
      "required": [
        "lower",
        "upper",
        "credibility"
      ],
      "properties": {
        "lower": {
          "type": "number",
          "description": "Lower bound of credible interval"
        },
        "upper": {
          "type": "number",
          "description": "Upper bound of credible interval"
        },
        "credibility": {
          "type": "number",
          "minimum": 0,
          "maximum": 1,
          "description": "Credibility level (e.g., 0.95 for 95% CrI)"
        },
        "hdi": {
          "type": "boolean",
          "description": "Whether this is a Highest Density Interval"
        }
      }
    },
    "Provenance": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "extractor": {
          "type": "string",
          "description": "Person or system that performed extraction"
        },
        "method": {
          "type": "string",
          "enum": [
            "human_double_entry",
            "human_single",
            "llm_assisted",
            "rule_based",
            "automated",
            "other"
          ],
          "description": "Extraction method used"
        },
        "confidence": {
          "type": "number",
          "minimum": 0,
          "maximum": 1,
          "description": "Extractor's confidence in the extraction"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "description": "When extraction was performed"
        },
        "transformation_notes": {
          "type": "string",
          "description": "Notes about data processing or transformation"
        },
        "consensus_status": {
          "type": "string",
          "enum": [
            "agreement",
            "disagreement",
            "resolved",
            "single_reviewer",
            "not_applicable"
          ],
          "description": "Status of reviewer consensus (for double extraction)"
        },
        "reviewers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of reviewers involved in extraction"
        },
        "adjudication": {
          "$ref": "#/$defs/Adjudication"
        },
        "source": {
          "$ref": "#/$defs/SourceRef"
        }
      }
    },
    "ExternalId": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "source",
        "id"
      ],
      "properties": {
        "source": {
          "type": "string",
          "enum": [
            "PMID",
            "PMCID",
            "DOI",
            "NCT",
            "ISRCTN",
            "EudraCT",
            "EU-CTR",
            "CTIS",
            "UMIN",
            "JPRN",
            "DRKS",
            "ChiCTR",
            "ANZCTR",
            "arXiv",
            "bioRxiv",
            "medRxiv",
            "PubPeer",
            "ISBN",
            "ISSN",
            "Handle",
            "URN",
            "Other"
          ],
          "description": "External identifier source system including preprint servers and academic publishers"
        },
        "id": {
          "type": "string",
          "description": "Identifier value within the source system",
          "examples": [
            "1234.5678",
            "2023.01.001",
            "10.1101/2023.01.01.123456",
            "978-0-123456-78-9"
          ]
        },
        "url": {
          "type": "string",
          "format": "uri",
          "description": "Optional direct URL to the external resource"
        },
        "version": {
          "type": "string",
          "description": "Version number for preprints or versioned documents"
        }
      },
      "allOf": [
        {
          "if": {
            "properties": {
              "source": {
                "const": "arXiv"
              }
            }
          },
          "then": {
            "properties": {
              "id": {
                "pattern": "^(\\d{4}\\.\\d{4,5}|[a-z-]+/\\d{7})$",
                "description": "arXiv identifier (new: YYMM.NNNN or old: subject-class/YYMMnnn)"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "source": {
                "const": "ISBN"
              }
            }
          },
          "then": {
            "properties": {
              "id": {
                "pattern": "^(?:978|979)[0-9]{10}$|^[0-9]{9}[0-9X]$",
                "description": "ISBN-10 or ISBN-13 format"
              }
            }
          }
        }
      ]
    },
    "AIProcessingMetadata": {
      "type": "object",
      "additionalProperties": false,
      "description": "Metadata for AI/ML processing and bias detection",
      "properties": {
        "model_info": {
          "type": "object",
          "required": [
            "name",
            "version"
          ],
          "properties": {
            "name": {
              "type": "string",
              "description": "Model name or identifier"
            },
            "version": {
              "type": "string",
              "description": "Model version"
            },
            "architecture": {
              "type": "string",
              "enum": [
                "transformer",
                "cnn",
                "rnn",
                "lstm",
                "gru",
                "bert",
                "gpt",
                "ensemble",
                "classical_ml",
                "other"
              ],
              "description": "Model architecture type"
            },
            "training_data_size": {
              "type": "integer",
              "minimum": 0
            },
            "training_date": {
              "type": "string",
              "format": "date"
            },
            "fine_tuned": {
              "type": "boolean",
              "description": "Whether model was fine-tuned for specific domain"
            },
            "domain_specific": {
              "type": "boolean",
              "description": "Whether model is domain-specific (e.g., medical)"
            }
          }
        },
        "performance_metrics": {
          "type": "object",
          "properties": {
            "accuracy": {
              "type": "number",
              "minimum": 0,
              "maximum": 1
            },
            "precision": {
              "type": "number",
              "minimum": 0,
              "maximum": 1
            },
            "recall": {
              "type": "number",
              "minimum": 0,
              "maximum": 1
            },
            "f1_score": {
              "type": "number",
              "minimum": 0,
              "maximum": 1
            },
            "auc_roc": {
              "type": "number",
              "minimum": 0,
              "maximum": 1
            },
            "confidence_interval": {
              "$ref": "#/$defs/EffectCI"
            },
            "validation_method": {
              "type": "string",
              "enum": [
                "cross_validation",
                "holdout",
                "temporal_split",
                "external_validation",
                "other"
              ]
            },
            "test_set_size": {
              "type": "integer",
              "minimum": 0
            }
          }
        },
        "bias_assessment": {
          "type": "object",
          "description": "Assessment of potential biases in AI model",
          "properties": {
            "demographic_bias": {
              "type": "object",
              "properties": {
                "assessed": {
                  "type": "boolean"
                },
                "bias_detected": {
                  "type": "boolean"
                },
                "affected_groups": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Demographic groups showing bias"
                },
                "mitigation_applied": {
                  "type": "boolean"
                },
                "fairness_metrics": {
                  "type": "object",
                  "properties": {
                    "demographic_parity": {
                      "type": "number"
                    },
                    "equalized_odds": {
                      "type": "number"
                    },
                    "calibration": {
                      "type": "number"
                    }
                  }
                }
              }
            },
            "selection_bias": {
              "type": "object",
              "properties": {
                "training_data_representativeness": {
                  "type": "string",
                  "enum": [
                    "high",
                    "moderate",
                    "low",
                    "unknown"
                  ]
                },
                "sampling_method": {
                  "type": "string"
                },
                "geographic_bias": {
                  "type": "boolean"
                },
                "temporal_bias": {
                  "type": "boolean"
                }
              }
            },
            "confirmation_bias": {
              "type": "object",
              "properties": {
                "label_quality_assessment": {
                  "type": "boolean"
                },
                "inter_annotator_agreement": {
                  "type": "number",
                  "minimum": 0,
                  "maximum": 1
                },
                "annotation_guidelines": {
                  "type": "string"
                }
              }
            }
          }
        },
        "explainability": {
          "type": "object",
          "properties": {
            "method": {
              "type": "string",
              "enum": [
                "lime",
                "shap",
                "attention_weights",
                "gradient_attribution",
                "integrated_gradients",
                "permutation_importance",
                "other"
              ],
              "description": "Explainability method used"
            },
            "feature_importance": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "feature": {
                    "type": "string"
                  },
                  "importance_score": {
                    "type": "number"
                  },
                  "rank": {
                    "type": "integer",
                    "minimum": 1
                  }
                }
              }
            },
            "global_explanations": {
              "type": "boolean"
            },
            "local_explanations": {
              "type": "boolean"
            },
            "counterfactual_examples": {
              "type": "boolean"
            }
          }
        },
        "uncertainty_quantification": {
          "type": "object",
          "properties": {
            "method": {
              "type": "string",
              "enum": [
                "bayesian",
                "ensemble",
                "monte_carlo_dropout",
                "conformal_prediction",
                "none"
              ],
              "description": "Uncertainty quantification method"
            },
            "epistemic_uncertainty": {
              "type": "number",
              "description": "Model uncertainty"
            },
            "aleatoric_uncertainty": {
              "type": "number",
              "description": "Data uncertainty"
            },
            "prediction_intervals": {
              "type": "boolean"
            },
            "out_of_distribution_detection": {
              "type": "boolean"
            }
          }
        },
        "ethical_considerations": {
          "type": "object",
          "properties": {
            "informed_consent": {
              "type": "boolean",
              "description": "Whether data subjects provided informed consent for AI processing"
            },
            "data_minimization": {
              "type": "boolean",
              "description": "Whether data minimization principle was applied"
            },
            "right_to_explanation": {
              "type": "boolean",
              "description": "Whether explanations are provided to affected individuals"
            },
            "human_oversight": {
              "type": "string",
              "enum": [
                "human_in_the_loop",
                "human_on_the_loop",
                "human_out_of_the_loop"
              ],
              "description": "Level of human oversight in AI decisions"
            },
            "impact_assessment": {
              "type": "boolean",
              "description": "Whether algorithmic impact assessment was conducted"
            }
          }
        }
      }
    },
    "EmailAddress": {
      "type": "string",
      "format": "email",
      "pattern": "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$",
      "description": "Valid email address for correspondence",
      "examples": [
        "researcher@university.edu",
        "corresponding.author@hospital.org"
      ]
    },
    "DataIntegrity": {
      "type": "object",
      "additionalProperties": false,
      "description": "Data integrity verification with multiple hash algorithms",
      "required": [
        "algorithm",
        "value"
      ],
      "properties": {
        "algorithm": {
          "type": "string",
          "enum": [
            "SHA-256",
            "SHA-512",
            "SHA-3-256",
            "SHA-3-512",
            "BLAKE2b",
            "SHA-1",
            "MD5",
            "CRC32"
          ],
          "description": "Cryptographic hash algorithm used"
        },
        "value": {
          "type": "string",
          "description": "Hex-encoded hash value"
        },
        "salt": {
          "type": "string",
          "description": "Optional salt value for enhanced security"
        },
        "verification_timestamp": {
          "type": "string",
          "format": "date-time",
          "description": "When the hash was computed or verified"
        },
        "verified_by": {
          "type": "string",
          "description": "System or person who verified the hash"
        },
        "multiple_hashes": {
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "algorithm",
              "value"
            ],
            "properties": {
              "algorithm": {
                "type": "string"
              },
              "value": {
                "type": "string"
              }
            }
          },
          "description": "Additional hash values using different algorithms for enhanced verification"
        }
      },
      "allOf": [
        {
          "if": {
            "properties": {
              "algorithm": {
                "const": "SHA-256"
              }
            }
          },
          "then": {
            "properties": {
              "value": {
                "pattern": "^[a-fA-F0-9]{64}$",
                "description": "SHA-256 hash must be 64 hex characters"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "algorithm": {
                "const": "SHA-512"
              }
            }
          },
          "then": {
            "properties": {
              "value": {
                "pattern": "^[a-fA-F0-9]{128}$",
                "description": "SHA-512 hash must be 128 hex characters"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "algorithm": {
                "const": "SHA-3-256"
              }
            }
          },
          "then": {
            "properties": {
              "value": {
                "pattern": "^[a-fA-F0-9]{64}$",
                "description": "SHA-3-256 hash must be 64 hex characters"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "algorithm": {
                "const": "SHA-3-512"
              }
            }
          },
          "then": {
            "properties": {
              "value": {
                "pattern": "^[a-fA-F0-9]{128}$",
                "description": "SHA-3-512 hash must be 128 hex characters"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "algorithm": {
                "const": "BLAKE2b"
              }
            }
          },
          "then": {
            "properties": {
              "value": {
                "pattern": "^[a-fA-F0-9]{128}$",
                "description": "BLAKE2b hash must be 128 hex characters"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "algorithm": {
                "const": "SHA-1"
              }
            }
          },
          "then": {
            "properties": {
              "value": {
                "pattern": "^[a-fA-F0-9]{40}$",
                "description": "SHA-1 hash must be 40 hex characters"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "algorithm": {
                "const": "MD5"
              }
            }
          },
          "then": {
            "properties": {
              "value": {
                "pattern": "^[a-fA-F0-9]{32}$",
                "description": "MD5 hash must be 32 hex characters"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "algorithm": {
                "const": "CRC32"
              }
            }
          },
          "then": {
            "properties": {
              "value": {
                "pattern": "^[a-fA-F0-9]{8}$",
                "description": "CRC32 hash must be 8 hex characters"
              }
            }
          }
        }
      ]
    },
    "EffectCI": {
      "type": "object",
      "additionalProperties": false,
      "description": "Confidence interval for effect estimates",
      "required": [
        "lower",
        "upper"
      ],
      "properties": {
        "level": {
          "type": "number",
          "enum": [
            80,
            90,
            95,
            99
          ],
          "default": 95,
          "description": "Confidence level as percentage"
        },
        "lower": {
          "type": "number",
          "description": "Lower bound of confidence interval"
        },
        "upper": {
          "type": "number",
          "description": "Upper bound of confidence interval"
        }
      }
    },
    "Adjudication": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "needed": {
          "type": "boolean",
          "default": false
        },
        "adjudicator": {
          "type": "string"
        },
        "notes": {
          "type": "string"
        }
      }
    }
  }
}
